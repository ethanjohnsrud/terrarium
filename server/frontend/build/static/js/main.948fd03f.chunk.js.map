{"version":3,"sources":["useInterval.jsx","Verify.jsx","Settings/SettingsButton.jsx","Readings/Readings.jsx","Background/terrarium-buddies.jpg","Background/Background.jsx","Background/ScreenSaver/ScreenSaver.jsx","Menu/frog-logo.png","Menu/Menu.jsx","Control/Duration.jsx","Control/Control.jsx","Control/Schedule/Schedule.jsx","Climate/Climate.jsx","Readings/ErrorBar.jsx","Settings/SettingsList.jsx","Settings/SettingsBlank.jsx","Settings/Settings.jsx","Settings/Details/SensorTest.jsx","Settings/Details/LogView.jsx","History/History.jsx","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","limit","savedCallback","useRef","useEffect","current","id","setInterval","setTimeout","clearInterval","Verify","props","useState","input","setInput","seeText","setSeeText","isAdvanced","prompt","toLowerCase","includes","style","position","zIndex","width","height","top","left","backgroundColor","display","flexDirection","justifyContent","alignItems","textAlign","padding","borderRadius","margin","color","autoFocus","gridColumn","border","type","onChange","e","target","value","onKeyPress","charCode","undefined","onSubmit","onClick","marginLeft","onCancel","SettingsButton","verification","setVerification","buttonText","setButtonText","verifyLevel","condense","pendingText","buttonColor","getButtonColor","makeRequest","password","localStorage","getItem","setItem","toString","onUpdate","success","isNaN","clear","processUpdate","overflow","className","buttonStyle","title","HoldButton","SERVER_URL","useSelector","root","serverURL","DATA","data","time","setTime","timeNextEvaluation","timer","setTimer","Date","getTime","frequencyActive","Math","floor","fetchData","axios","post","PASSWORD","duration","evaluationFrequency","then","response","catch","error","status","ERRORBACKGROUNDCOLOR","Readings","forwardRef","ref","nextCountDown","setNextCountDown","previousCountUp","setPreviousCountUp","sensorColor","setSensorColor","maxError","setMaxError","ERROR_LIST","setERROR_LIST","convertToFahrenheit","dispatch","useDispatch","routeHistory","useHistory","sensorRef","showDetails","hideDetails","getDefaultBackgroundColor","getSensorFontColor","getTemperaturePercent","operatingTemperature","goal","goalTemperature","min","minimumTemperature","max","maximumTemperature","getHumidityPercent","operatingHumidity","goalHumidity","minimumHumidity","maximumHumidity","list","sensorErrorCode","push","maximumTemperatureErrorCode","minimumTemperatureErrorCode","maximumHumidityErrorCode","minimumHumidityErrorCode","accessDatabase","timeLastReading","previous","formatTemperature","temp","round","getSensor","length","slice","map","i","gridRow","overflowX","fontSize","fontFamily","borderColor","statusMessage","match","reverse","m","operatingSchedules","join","dateFormat","getTemperature","align","columnGap","verticalAlign","getHumidity","marginRight","window","innerWidth","setAlign","temperatureSectionTop","document","getElementById","getBoundingClientRect","humiditySectionTop","HumidityOnClick","TemperatureOnClick","sensorOnClick","Background","IMAGE","image","src","location","defaultImage","alt","objectFit","opacity","visible","transition","TRANSITION_INTERVAL","TimeBar","countUp","setCountUp","bottom","whiteSpace","right","ScreenSaver","React","serverError","setServerError","isScreenSaverActive","showScreenSaver","setShowScreenSaver","screenSaverOpacity","setScreenSaverOpacity","screenSaverBrightness","calculateBrightness","setting","hour","options","blackHourStart","dayHourStart","dayOpacity","nightHourStart","nightOpacity","sort","a","b","console","log","screensaverTimer","resetTimer","deactivateScreenSaver","useCallback","clearTimeout","SCREENSAVER_INACTIVE_TIME","useImperativeHandle","isVisible","Menu","routeLocation","useLocation","textDecoration","pathname","icon","to","DURATION_LIST","name","getDurationName","v","places","parseInt","getDurationValue","cleanedValue","exec","label","EXCLUDE_CONTROL_TYPES","MakeToggle","overridden","until","test","topReason","severe","isSelected","select","active","Control","durationIndex","setDurationIndex","selectMode","setSelectMode","selectedList","setSelectedList","setControlTypes","controlTypes","smartIndex","findIndex","d","shortedNameList","names","y","CONTROLS","types","result","forEach","substring","toUpperCase","scheduleNow","set","reason","JSON","stringify","repeat","event","c","settings","filter","minWidth","typesMap","Map","t","get","index","mapList","controlList","getControlTypes","original","every","val","arr","DropMenu","customDefault","custom","setCustom","multipleList","setMultipleList","openList","dropListOpen","customName","inputType","selectMultiple","outerStyle","onFocus","onBlur","buttonStyleClass","payload","dropListId","subValue","borderBottom","marginTop","onSelect","option","extraList","borderTop","extraName","onExtra","marginBottom","getDay","today","setHours","tomorrow","yesterday","day","getDate","getDateAbbreviation","getDateList","DropDateMenu","customDate","setCustomDate","getMonth","step","h","getHours","getMinutes","ScheduleRow","pendingAction","setPendingAction","priority","setPriority","setMinutes","setTitle","titleEdited","setTitleEdited","setNames","setDuration","setSet","setRepeat","resetVariables","insertNew","isControlsChanged","Array","isArray","isTimeChanged","isTitleChanged","isDurationChanged","isSetChanged","isRepeatChanged","isChanged","isControlsValid","isTimeValid","isTitleValid","isDurationValid","isSetValid","isRepeatValid","text","action","space","maxWidth","overriddenList","unshift","getUpdateOptions","replace","s","r","Schedule","SCHEDULES","setSCHEDULES","sortByTime","setSortByTime","calculatedList","setCalculatedList","fetchSchedules","schedules","days","minimum","end","count","occurrences","overrides","reduce","least","find","some","calculateOccurrenceList","getOverriddenList","schedule","currentPriority","increase","attributeName","Climate","CLIMATE","setCLIMATE","range","setRange","temperatureMode","setTemperatureMode","saveButtonText","setSaveButtonText","fetchClimate","climate","getMaxValue","format","ghost","ceil","getMinValue","getWidthOffset","parseFloat","getComputedStyle","documentElement","getRange","values","cellRatio","calculatedWidth","paddingLeft","paddingRight","j","item","temperature","toFixed","humidity","readOnly","temperatureAverage","humidityAverage","ADVANCED_PASSPHRASE","tag","ErrorBar","SettingsList","setCurrent","setOptions","setList","newCurrent","newOptions","addCustom","latestList","l","updateButton","toggleOption","latest","allowed","o","getOldOptions","gridTemplateColumns","old","SettingsBlank","setValue","numberStep","cache","Settings","SCREENSAVER_BRIGHTNESS","route","body","onSuccess","put","LOCAL_SETTINGS","settingOptions","splice","emailStatusRecipients","emailIssueRecipients","email","message","updateRegularity","updateRegularityOptions","sensorType","sensorTypes","sensorMode","sensorModes","mode","pop","SensorTest","testingDuration","setTestingDuration","testingInterval","setTestingInterval","fetchingError","setFetchingError","interval","minutes","seconds","borderSpacing","split","p","colspan","LogView","fileName","setFileName","topRef","getFileNumber","updateLog","fileNumber","headers","isError","line","isHeader","isClimate","isTrace","isSystem","entry","k","fontWeight","fontStyle","scrollIntoView","block","inline","History","dayList","setDayList","setClimate","getTemperatureOff","abs","getHumidityOff","updateHistory","inactive","App","screenSaverRef","addEventListener","onMouseMove","onWheel","exact","path","boxSizing","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialImage","IMAGE_INTERVAL","initialScreenSaverBrightness","allStateDomains","combineReducers","state","process","store","createStore","getState","innerHeight","responseType","URL","createObjectURL","res","start","origin","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.948fd03f.chunk.js","sourcesContent":["import {useEffect, useRef} from 'react';\r\n\r\n//Custom Hook : Interval for autoplay\r\nexport default function useInterval (callback, delay, limit) {\r\n    const savedCallback = useRef();\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      let id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      if(limit) setTimeout(() => {clearInterval(id);}, limit);\r\n      return () => {clearInterval(id);}\r\n    }, [delay]);\r\n  }","import React, {useState} from 'react';\r\n\r\n\r\nconst Verify = (props) => {\r\n    const [input, setInput] = useState();\r\n    const [seeText, setSeeText] = useState(false);\r\n\r\n    const isAdvanced = () => props.prompt.toLowerCase().includes('advance' || 'passphrase');\r\n\r\n    return (<div id='verify-container' style={{position: 'fixed', zIndex: 35, width: '100vw', height: '100vh', top: 0, left:0, backgroundColor: `rgba(0,0,0,${isAdvanced() ? '1.0' : '0.7'})`, \r\n                                                display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n        <div id='verify-inside' style={{position: 'relative', display: 'grid', textAlign: 'center', padding: '1.0rem 2.0rem', backgroundColor: isAdvanced() ? 'darkred' : 'var(--main-color)', borderRadius: '5px', }}>\r\n            <strong style={{margin: '0.5rem', width: '100%', textAlign: 'left', color: isAdvanced() ? 'whitesmoke' : 'black'}}>{props.prompt}:</strong>\r\n            <div style={{display: 'grid', backgroundColor: 'black', borderRadius: '5px', padding: '0.25rem 0.5rem',}}>\r\n                <input autoFocus style={{gridColumn: 1, border: 'none', backgroundColor: 'black', color: 'whitesmoke'}} type={seeText ? 'text' : 'password'} onChange={(e)=>setInput(e.target.value)} onKeyPress={(e)=>{if(e.charCode == 13 && input != undefined && input != '') props.onSubmit(input);}}/>\r\n                <input type='checkbox'value={seeText} onClick={()=>setSeeText(!seeText)} style={{gridColumn: 2, border: 'none', color: 'var(--main-color)', height: '1.2rem', width: '1.2rem', marginLeft: '1.0rem'}} />\r\n            </div>\r\n            <div>\r\n                <button style={{border: '2px solid white', backgroundColor: 'whitesmoke', color: 'black', padding: '0.25rem', margin: '0.5rem'}} onClick={()=>props.onCancel()}>CANCEL</button>\r\n                <button style={{border: 'none', backgroundColor: 'black', color: 'white', padding: '0.35rem', margin: '0.5rem'}} onClick={()=>{if(input != undefined && input != '') props.onSubmit(input);}}>SUBMIT</button>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\nexport default Verify;","import React, {useState, useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport useInterval from '../useInterval';\r\nimport Verify from '../Verify';\r\nimport {fetchData} from '../index';\r\n\r\nimport '../index.css';\r\nimport './Settings.css';\r\n\r\nconst SettingsButton = (props) => {\r\n    const [verification, setVerification] = useState(undefined);\r\n    const [buttonText, setButtonText] = useState('UPDATE');\r\n\r\n    //Guidelines Abstracted\r\n    const verifyLevel = (props.verifyLevel != undefined) ? props.verifyLevel : 1;\r\n    const condense = (props.condense != undefined) ? props.condense : false;\r\n    const pendingText = (props.pendingText != undefined) ? props.pendingText : 'PENDING';\r\n    const buttonColor = (props.buttonColor != undefined) ? props.buttonColor : 'var(--main-color)';\r\n    const getButtonColor=(buttonText)=>(buttonText=='UPDATE') ? buttonColor : (buttonText=='PASS' || buttonText=='INVALID' || buttonText=='FAILED') ? '#e8000d' : (buttonText=='PENDING' || buttonText=='BLANK') ? 'orange' : '#cc5500';\r\n\r\n    //*********************************\r\n    //   API REQUEST & VERIFICATION\r\n    //*********************************\r\n    const makeRequest=async(password)=>{ setVerification(undefined); //saving local until fetch up stream is called to replace data\r\n        if(verifyLevel == 1 && !localStorage.getItem(\"password\")) await localStorage.setItem(\"password\", password.toString());\r\n        const success = await props.onUpdate(password);\r\n        if(success == null || success == undefined) setButtonText('UPDATE');\r\n        else if(success == true || isNaN(success)) {setButtonText((success != true) ? success : 'SAVED'); setTimeout(()=>setButtonText('UPDATE'), 3000); }\r\n        else if(success == 401) { setButtonText('PASS'); setTimeout(()=>setButtonText('UPDATE'), 5000); localStorage.clear();}\r\n        else if(success == 404) { setButtonText('INVALID'); setTimeout(()=>setButtonText('UPDATE'), 5000); }\r\n        else {setButtonText('FAILED'); setTimeout(()=>setButtonText('UPDATE'), 5000);}\r\n    }\r\n\r\n    const processUpdate=()=>{ if(buttonText == 'UPDATE') { setButtonText('PENDING');\r\n        if(verifyLevel == 0) makeRequest(undefined); //No Security\r\n        else if(verifyLevel == 1 && !localStorage.getItem(\"password\")) setVerification('Enter Control Password to Continue:'); //Only Request if not stored\r\n        else if(verifyLevel == 1) makeRequest(localStorage.getItem(\"password\")); //Use Saved Password\r\n        else setVerification('Enter Advanced Passphrase to Proceed:'); //undefined || >1\r\n    }}\r\n    \r\n    //*********************************\r\n    //   HTML DISPLAY\r\n    //*********************************\r\n\r\n    return(<section style={{overflow: 'hidden'}}>\r\n        {(condense) ?   <button className={`settings-single-button`} onClick={()=>processUpdate()}  style={{...props.buttonStyle, overflow: 'hidden', backgroundColor: buttonColor}}>{props.title}\r\n                                <label className={`settings-single-button-overlay`} style={{display: buttonText == 'UPDATE' ? 'none' : 'flex', overflow: 'hidden', backgroundColor: getButtonColor(buttonText)}}>{buttonText}</label></button>\r\n        : <div className='settings-value-box' style={{display: (condense) ? 'block' : 'grid'}}>\r\n        <button className={`settings-single-button`} onClick={()=>processUpdate()}  style={{...props.buttonStyle, overflow: 'hidden', backgroundColor:  getButtonColor(buttonText)}}>{buttonText == 'UPDATE' ? props.title : buttonText == 'PENDING' ? pendingText : buttonText}</button>\r\n        </div>}\r\n        {verification ?\r\n            <Verify\r\n                prompt={verification}\r\n                onSubmit={makeRequest}\r\n                onCancel={()=>{setVerification(undefined); setButtonText('UPDATE');}}\r\n            />  : <div className='none no-size' style={{position:'absolute'}}></div>}\r\n    </section>);\r\n}\r\nexport default SettingsButton;\r\n\r\nexport const HoldButton = (props) => {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const DATA = useSelector(root => root.data);\r\n    const [time, setTime] = useState(0);\r\n    useEffect(()=>setTime(DATA.timeNextEvaluation),[DATA]);\r\n    const [timer, setTimer] = useState(0);\r\n    useInterval(()=>setTimer(time - new Date().getTime()), 1000);\r\n\r\n    return (<SettingsButton title={`${!DATA.frequencyActive ? 'HOLDING' : 'HOLD'}    -  ${(timer <= 0) ? 'evaluating' : `${(timer>3600000)?`${Math.floor(timer/3600000)}:`:''}${(timer>60000)?`${Math.floor((timer%3600000)/60000)}:`:''}${((timer>60000) && (timer%60000<10000))?'0':''}${Math.floor((timer%60000)/1000)}`}`}\r\n    condense={true}\r\n    buttonStyle={props.buttonStyle}\r\n    buttonColor={!DATA.frequencyActive ? '#cc5500' : props.buttonColor}\r\n    verifyLevel={props.verifyLevel || 1}\r\n    onUpdate={(password)=>{setTimeout(()=>fetchData(), 5000); return axios.post(`${SERVER_URL}/postpone-evaluation/`, {PASSWORD: password, duration: props.duration || DATA.evaluationFrequency}).then((response)=>{setTime((props.duration || DATA.evaluationFrequency) + new Date().getTime());  return 'HOLDING';}).catch((error)=>error.response ? error.response.status : false);}} \r\n    />);\r\n}","import React, {useState, useEffect, forwardRef, useRef} from 'react';\r\nimport { useHistory} from \"react-router-dom\";\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport dateFormat from 'dateformat';\r\nimport useInterval from '../useInterval';\r\nimport './Readings.css';\r\nimport '../index.css';\r\nimport SettingsButton from '../Settings/SettingsButton';\r\nimport { fetchData } from '..';\r\n\r\n\r\nconst BACKGROUNDCOLOR = 'rgba(24, 98, 24, 0.5)';\r\nconst ERRORBACKGROUNDCOLOR = 'darkred';\r\nconst HOLDINGBACKGROUNDCOLOR = '#cc5500';\r\n\r\n\r\n const Readings = forwardRef((props, ref) => {\r\n    const [nextCountDown, setNextCountDown] = useState(0);\r\n    const [previousCountUp, setPreviousCountUp] = useState(0);\r\n    const [sensorColor, setSensorColor] = useState(BACKGROUNDCOLOR);\r\n    const [maxError, setMaxError] = useState(2);\r\n    const [ERROR_LIST, setERROR_LIST] = useState(['SERVER DISCONNECTED']);\r\n    const DATA = useSelector(root => root.data);\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const convertToFahrenheit = useSelector(root => root.convertToFahrenheit);\r\n    const dispatch = useDispatch();\r\n    const routeHistory = useHistory();\r\n    const sensorRef = useRef(); \r\n    \r\n    const showDetails = () => (props.hideDetails && maxError == 0) ? false : true;\r\n\r\n    const getDefaultBackgroundColor = () => showDetails() ? 'rgba(24, 98, 24, 0.85)' : 'rgba(24, 98, 24, 0.3)';\r\n\r\n    const getSensorFontColor = () => (sensorColor == ERRORBACKGROUNDCOLOR || !maxError || !DATA.frequencyActive) ? 'white' : ERRORBACKGROUNDCOLOR;\r\n\r\n    const getTemperaturePercent = (current = DATA.operatingTemperature, goal = DATA.goalTemperature, min = DATA.minimumTemperature, max = DATA.maximumTemperature) => (current >= max) ? 2 + ((current-max) * (1/(max-min))) : (current <= min) ? ((current-min) * (1/(max-min))) : 1 - ((goal-current) * (1/(max-min))); \r\n\r\n    const getHumidityPercent = (current = DATA.operatingHumidity, goal = DATA.goalHumidity, min = DATA.minimumHumidity, max = DATA.maximumHumidity) => (current >= max) ? 2 + ((current-max) * (1/(max-min))) : (current <= min) ? ((current-min) * (1/(max-min))) : 1 - ((goal-current) * (1/(max-min))); \r\n\r\n//Evaluate Current Errors //Error 0, 1, 2\r\n    useEffect(()=>{let max = 0; let list = [];\r\n        if(DATA.sensorErrorCode == undefined) {max = 2; list.push('SERVER DISCONNECTED');}\r\n        else {//Ordered Importance\r\n            if(DATA.sensorErrorCode) {max = Math.max(max, DATA.sensorErrorCode); list.push('SENSOR ERROR');}\r\n            if(DATA.maximumTemperatureErrorCode) {max = Math.max(max, DATA.maximumTemperatureErrorCode); list.push('MAXIMUM TEMPERATURE');}\r\n            if(DATA.minimumTemperatureErrorCode) {max = Math.max(max, DATA.minimumTemperatureErrorCode); list.push('MINIMUM TEMPERATURE');}\r\n            if(DATA.maximumHumidityErrorCode) {max = Math.max(max, DATA.maximumHumidityErrorCode); list.push('MAXIMUM HUMIDITY');}\r\n            if(DATA.minimumHumidityErrorCode) {max = Math.max(max, DATA.minimumHumidityErrorCode); list.push('MINIMUM HUMIDITY');}\r\n            if((DATA.accessDatabase != undefined && !DATA.accessDatabase)) {max = Math.max(max, 1); list.push('DATABASE LOCKED');}\r\n        } setMaxError(max); setERROR_LIST(list);\r\n    },[DATA]);\r\n\r\n    useInterval(()=>{setNextCountDown(DATA.timeNextEvaluation - new Date().getTime()); setPreviousCountUp(new Date().getTime() - DATA.timeLastReading)\r\n                    setSensorColor(previous => (maxError == 1 || previous == 'whitesmoke') ? ERRORBACKGROUNDCOLOR : (maxError > 1) ? 'whitesmoke' : getDefaultBackgroundColor()); \r\n    }, 1000);\r\n\r\n    const formatTemperature = (temp) => (Math.round((convertToFahrenheit ? ((temp*(9/5)+32)) : temp) * 100) / 100);\r\n\r\n    const getSensor = () => (DATA.operatingTemperature && !showDetails()) ? <div className='none no-size'></div>\r\n        : <div ref={sensorRef} id='condition-details' className='none readings-box-outer' style={{color: getSensorFontColor()}}>\r\n            <div className='readings-box-inner' style={{backgroundColor: sensorColor}}>\r\n                <div className=' readings-value-box' >\r\n                    {(ERROR_LIST.length) \r\n                        ? <strong id={'readings-top-error'} style={{color: sensorColor == ERRORBACKGROUNDCOLOR ? 'white' : ERRORBACKGROUNDCOLOR}}>{ERROR_LIST[0]}</strong>\r\n                        : <div className='none no-size'></div>\r\n                     }\r\n                    {(ERROR_LIST.length > 1) ? ERROR_LIST.slice(1).map((e,i)=><strong key={`error-${i}`} className=' ' style={{gridRow: (i+3), gridColumn: 1, overflowX: 'auto', fontSize: '1.2rem', fontFamily: `'New Tegomin', serif`, margin: 0, color: sensorColor == ERRORBACKGROUNDCOLOR ? 'white' : ERRORBACKGROUNDCOLOR}} >{e}</strong>): <div className='none no-size'></div>}\r\n                    {(ERROR_LIST.length > 1) ? <hr style={{borderColor: getSensorFontColor()}}></hr> : <div className='none no-size'></div>}\r\n                    {(DATA.statusMessage && DATA.statusMessage.length) ?  <div style={{display: 'inline-grid', gridRow: 2, gridColumn: 1,}}>\r\n                    {DATA.statusMessage.match(/[^\\r\\n]+/g).reverse().map((m, i)=>\r\n                        <section key={`statusMessage-${i}`} className='readings-status-message' style={{gridRow: (i+2)}} >➳ {m}</section>\r\n                    )} </div> : <div className='none no-size'></div>}\r\n                    {(DATA.operatingSchedules || []).length \r\n                        ? <p className={'readings-schedule-list'}  >{DATA.operatingSchedules.join(' | ')}</p>\r\n                        : <div className='none no-size'></div>}\r\n                </div>\r\n                {(DATA.operatingTemperature) ? <section className='readings-value-box'>\r\n                    <hr style={{borderColor: getSensorFontColor()}}></hr>\r\n                    <p className='none readings-description' style={{gridRow: 2, gridColumn: 1,}} >Last Sensor Reading:</p>\r\n                    <strong className='none readings-value' style={{gridRow: 2, gridColumn: 2, }} >{dateFormat(DATA.timeLastReading, 'm-d-yy HH:MM')}{previousCountUp > DATA.evaluationFrequency ? ` [${`${(previousCountUp>3600000)?`${Math.floor(previousCountUp/3600000)}:`:''}${(previousCountUp>60000)?`${Math.floor((previousCountUp%3600000)/60000)}:`:''}${((previousCountUp>60000) && (previousCountUp%60000<10000))?'0':''}${Math.floor((previousCountUp%60000)/1000)}`}]`: ''}</strong>\r\n                    <p className='none readings-description' style={{gridRow: 3, gridColumn: 1, }} >Sensor Frequency:</p>\r\n                    <strong className='none readings-value' style={{gridRow: 3, gridColumn: 2, }} >{DATA.evaluationFrequency/60000} minutes</strong>\r\n                    <p className='none readings-description' style={{gridRow: 4, gridColumn: 1,  }} >Next Evaluation:</p>\r\n                    <strong className='none readings-value' style={{gridRow: 4, gridColumn: 2, }} >{nextCountDown <= 0 ? 'Reading' : nextCountDown > 60000 ? `${Math.floor(nextCountDown/60000)}:${nextCountDown%60000<10000?'0':''}${Math.floor((nextCountDown%60000)/1000)}` : `${Math.floor(nextCountDown/1000)} seconds`}</strong>\r\n                </section> : <div  className='none no-size'></div>}\r\n            </div>\r\n        </div>;\r\n\r\n    const getTemperature = () => (DATA.operatingTemperature) ? <div id='temperature-section' className='none readings-box-outer' style={{marginLeft: align ? 'auto' : 0}}>\r\n            <div className='readings-box-inner' style={{backgroundColor: maxError ? ERRORBACKGROUNDCOLOR : getDefaultBackgroundColor()}}>\r\n                <section className='none readings-value-box' style={{columnGap: '0'}}>\r\n                        <strong className='none readings-main-value' style={{}} >{formatTemperature(DATA.operatingTemperature)}</strong>\r\n                        <p className='none ' style={{gridRow: 1, gridColumn: 2, verticalAlign: 'top', fontSize: '1.0rem'}} >{convertToFahrenheit ? <span>&#8457;</span> : <span>&#8451;</span>}</p>\r\n                    </section>\r\n                {!showDetails() ? <div className='none no-size'></div> \r\n                : <section className='readings-value-box'>\r\n                        <p className='none readings-title' style={{}} >Temperature</p>\r\n                        <p className='none readings-description' style={{gridRow: 2, gridColumn: 1, }} >Efficiency:</p>\r\n                        <strong className='none readings-value' style={{gridRow: 2, gridColumn: 2, }} >{Math.floor(getTemperaturePercent()*100)}%</strong>\r\n                        <p className='none readings-description' style={{gridRow: 3, gridColumn: 1, }} >Range:</p>\r\n                        <strong className='none readings-value' style={{gridRow: 3, gridColumn: 2, }} >{formatTemperature(DATA.minimumTemperature)} - {formatTemperature(DATA.maximumTemperature)}{convertToFahrenheit ? <span>&#8457;</span> : <span>&#8451;</span>}</strong>\r\n                </section> }     \r\n            </div>     \r\n        </div> : <div id='temperature-section' className='none no-size'></div>;\r\n\r\n\r\n    const getHumidity = () => (DATA.operatingHumidity) ? <div id='humidity-section'  className='none readings-box-outer' style={{marginRight: align ? 'auto' : '0'}}>\r\n            <div className='readings-box-inner' style={{backgroundColor: maxError ? ERRORBACKGROUNDCOLOR : getDefaultBackgroundColor()}}>\r\n                <section className='none readings-value-box' style={{columnGap: '0'}}>\r\n                    <strong className='none readings-main-value' style={{}} >{Math.round(DATA.operatingHumidity * 100) / 100}</strong>\r\n                    <p className='none ' style={{gridRow: 1, gridColumn: 2, verticalAlign: 'top', fontSize: '1.0rem'}} >%</p>\r\n                </section>\r\n                {!showDetails() ? <div className='none no-size'></div> \r\n                : <section className='readings-value-box'>\r\n                    <p className='none readings-title' style={{textAlign: 'center'}} >Humidity</p>\r\n                    <p className='none readings-description' style={{gridRow: 2, gridColumn: 1, }} >Efficiency:</p>\r\n                    <strong className='none readings-value' style={{gridRow: 2, gridColumn: 2, }} >{Math.floor(getHumidityPercent()*100)}%</strong>\r\n                    <p className='none readings-description' style={{gridRow: 3, gridColumn: 1, }} >Range:</p>\r\n                    <strong className='none readings-value' style={{gridRow: 3, gridColumn: 2, }} >{(DATA.minimumHumidity)} - {(DATA.maximumHumidity)}%</strong>\r\n                </section> }\r\n            </div> \r\n        </div> : <div id='humidity-section' className='none no-size'></div>;\r\n\r\n//Detect flew-wrap and center horizontally\r\nconst [align, setAlign] = useState((window.innerWidth < 900));\r\nuseEffect(()=>{setTimeout(()=>{\r\n    const temperatureSectionTop = document.getElementById('temperature-section').getBoundingClientRect().top;\r\n    const humiditySectionTop = document.getElementById('humidity-section').getBoundingClientRect().top;\r\n    if(temperatureSectionTop != undefined && temperatureSectionTop != humiditySectionTop) setAlign(true);\r\n},500);},[]);    \r\n\r\nconst HumidityOnClick = async(password) => {const response = await fetchData(); routeHistory.push('/'); return response == true ? 'UPDATING' : response;}\r\nconst TemperatureOnClick = async(password) => {dispatch({type: 'toggleConvertToFahrenheit'}); return null;}\r\nconst sensorOnClick = async(password) => {if(maxError && DATA.sensorErrorCode != undefined) routeHistory.push('/log'); else routeHistory.push('/settings'); return null;}\r\n\r\n    return (align ? <div ref={ref} id='readings-container' className='readings-align'  >\r\n                <SettingsButton title={getSensor()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={maxError ? 0 : 1}\r\n                    pendingText='INITIATING'\r\n                    onUpdate = {sensorOnClick}/>\r\n                <SettingsButton title={getTemperature()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={0}\r\n                    onUpdate = {TemperatureOnClick}/>\r\n                <SettingsButton title={getHumidity()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={0}\r\n                    pendingText='RETRIEVING'\r\n                    onUpdate={HumidityOnClick}/>\r\n        </div> : <div ref={ref} id='readings-container' className='readings-top'  >\r\n                <SettingsButton title={getTemperature()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={0}\r\n                    onUpdate = {TemperatureOnClick}/>\r\n                <SettingsButton title={getSensor()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={maxError ? 0 : 1}\r\n                    pendingText='INITIATING'\r\n                    onUpdate = {sensorOnClick}/>\r\n                <SettingsButton title={getHumidity()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={0}\r\n                    pendingText='RETRIEVING'\r\n                    onUpdate={HumidityOnClick}/>\r\n        </div>);\r\n});\r\n\r\nconst ScrollText=(props)=>{\r\n    const boxRef = useRef();\r\n    const textRef = useRef();\r\n    const [scrollLeft, setScrollLeft] = useState(true);\r\n    const [minLeft, setMinLeft] = useState(0);\r\n    const [position, setPosition] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        if(boxRef.current.offsetWidth > (props.parentRef.current.offsetWidth)) \r\n            setMinLeft(-1*(textRef.current.offsetWidth - (props.parentRef.current.offsetWidth)));\r\n    }, [boxRef, textRef]);\r\n\r\n    useInterval(()=>{ if(minLeft<0) {\r\n        if(position < minLeft) {setScrollLeft(false); setPosition(minLeft+1)}\r\n        if(position > 0) {setScrollLeft(true); setPosition(-1)}\r\n        setPosition(previous => scrollLeft ? (previous - 1) : (previous + 1));\r\n        textRef.current.style.transform = `translateX(${position}px)`;\r\n    }}, 20);\r\n\r\n    return (<span ref={boxRef} style={{display: 'grid', gridAutoFlow: 'column'}}><span style={{margin: 'auto'}}\r\n        >{props.leading}</span><p  ref={textRef} id={props.id} className={props.class}  style={{overflowX: 'visible'}}\r\n        >{props.text}</p><span style={{margin: 'auto'}}>{props.trailing}</span></span>);\r\n}\r\n\r\nexport default Readings;","export default __webpack_public_path__ + \"static/media/terrarium-buddies.3158d65c.jpg\";","import { useSelector} from 'react-redux';\r\nimport defaultImage from './terrarium-buddies.jpg';\r\nimport '../index.css';\r\nimport './Background.css';\r\n\r\n\r\nconst Background = (props) => {\r\n\r\n  const IMAGE = useSelector(root => root.image);\r\n\r\nreturn(\r\n    <div key='Background Component'>\r\n      <div key='background-black' style={{\r\n        position: 'absolute', \r\n        zIndex: 0,\r\n        height:'100vh', \r\n        width: '100vw', \r\n        backgroundColor: 'black'\r\n        }}></div>\r\n      <div key='Background Image' style={{position: 'absolute',  }}>\r\n        {/* <div key='background-cover' style={{\r\n        position: 'absolute', \r\n          zIndex: '3',\r\n          height:'100vh', \r\n          width: '100vw', \r\n          backgroundColor: 'black',\r\n          opacity: 0.4,\r\n\r\n          }}></div> */}\r\n        <img  className=\"blur-effect\" src={IMAGE.location || defaultImage} alt={'background-image'}  style={{\r\n          zIndex: '2',\r\n          display: 'block',\r\n          objectFit: 'cover',\r\n          overflow: 'hidden',\r\n          width: '100vw', \r\n          height: '100vh', \r\n          opacity: IMAGE.visible ? 0.9 : 0.3, \r\n          transition: `all ${IMAGE.TRANSITION_INTERVAL*0.6}ms ease`}}/>\r\n        \r\n      </div>\r\n    </div>\r\n);\r\n}\r\nexport default Background;","import React, {useState, useCallback, useEffect, useRef, useImperativeHandle} from 'react';\r\nimport { useHistory} from \"react-router-dom\";\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport dateFormat from 'dateformat';\r\nimport useInterval from '../../useInterval';\r\nimport defaultImage from '../terrarium-buddies.jpg';\r\nimport '../../index.css';\r\n\r\nimport Readings from '../../Readings/Readings';\r\n\r\n\r\nconst TimeBar = (props) => {\r\n  const DATA = useSelector(root => root.data);\r\n\r\n  const [countUp, setCountUp] = useState(0);\r\n  useInterval(()=>{setCountUp((new Date().getTime() - DATA.timeLastReading));},1000);\r\n\r\n  return(<div className='none border-box' style={{position: 'fixed', bottom: 0, width: '100%', \r\n    padding: '0.3rem 1.0rem', \r\n    display: 'flex', justifyContent: 'space-between',\r\n    backgroundColor: 'black', color: 'whitesmoke', fontSize: '0.8rem', whiteSpace: 'wrap', overflowX: 'scroll',\r\n  }}>\r\n      <p className='none' style={{whiteSpace: 'nowrap', left: 0}} >{dateFormat(new Date().getTime(), 'dddd, mmmm d, yyyy h:MM')}</p>\r\n      <p className='none' style={{whiteSpace: 'nowrap', right: '100vw'}} >{isNaN(countUp) ? 'Disconnected' : countUp > 60000 ? `${Math.floor(countUp/60000)}:${countUp%60000<10000?'0':''}${Math.floor((countUp%60000)/1000)}` : `${Math.floor(countUp/1000)} seconds`}</p>\r\n  </div>);\r\n}\r\n\r\nconst ScreenSaver = React.forwardRef((props, ref) => {\r\n//  Detection & Timeout: https://codesandbox.io/s/5xrrr09r9k?file=/src/index.js:480-1530\r\n\r\nconst IMAGE = useSelector(root => root.image);\r\nconst DATA = useSelector(root => root.data);\r\nconst [serverError, setServerError] = useState(false);\r\nconst isScreenSaverActive = useSelector(root => root.isScreenSaverActive);\r\nconst [showScreenSaver, setShowScreenSaver] = useState(true);\r\nconst [screenSaverOpacity, setScreenSaverOpacity] = useState('0'); //CSS Inline String\r\nuseEffect(()=>{if(isScreenSaverActive && !serverError) {\r\n    // setScreenSaverOpacity('0');\r\n    setShowScreenSaver(true);\r\n    setTimeout(() => setScreenSaverOpacity('1'), ( 0.6*1000));\r\n  } else {\r\n    // setScreenSaverOpacity('1');\r\n    setTimeout(() => setScreenSaverOpacity('0'), ( 0.6*1000));\r\n    setTimeout(() => setShowScreenSaver(false), (1000));\r\n  }}, [isScreenSaverActive, serverError]);\r\nconst screenSaverBrightness = useSelector(root => root.screenSaverBrightness);\r\nconst dispatch = useDispatch();\r\nconst routeHistory = useHistory();\r\n\r\nconst calculateBrightness = () => { if(screenSaverBrightness.setting == 'Black') return 1.0;\r\n    if(screenSaverBrightness.setting == 'Scheduled') { const hour = 19;\r\n    let options=[{hour: screenSaverBrightness.blackHourStart, opacity: 0}, {hour: screenSaverBrightness.dayHourStart, opacity: screenSaverBrightness.dayOpacity}, {hour: screenSaverBrightness.nightHourStart, opacity:screenSaverBrightness.nightOpacity}];\r\n    options = options.sort((a,b) => (a.hour-b.hour));\r\n    console.log(options);\r\n    if((hour >= options[0].hour) && ((hour < options[1].hour) || (options[0].hour == options[1].hour)) && (options[0].hour >= 0 && options[0].hour <= 23)) return options[0].opacity;\r\n    if((hour >= options[1].hour) && ((hour < options[2].hour) || (options[1].hour == options[2].hour)) && (options[1].hour >= 0 && options[1].hour <= 23)) return options[1].opacity;\r\n    if((hour >= options[2].hour) || (hour < options[0].hour) && (options[2].hour >= 0 && options[2].hour <= 23)) return options[2].opacity;\r\n    }\r\n    return 1.0; //Default\r\n}\r\n\r\n//Evaluate Current Errors\r\n  useEffect(()=>{ const list = [];\r\n    if((DATA.sensorErrorCode == undefined) \r\n        || (DATA.sensorErrorCode) \r\n        || (DATA.maximumTemperatureErrorCode) \r\n        || (DATA.minimumTemperatureErrorCode) \r\n        || (DATA.maximumHumidityErrorCode) \r\n        || (DATA.minimumHumidityErrorCode) \r\n        || (DATA.accessDatabase != undefined && !DATA.accessDatabase)) setServerError(true);\r\n    else setServerError(false);\r\n  },[DATA]);\r\n\r\n//Screen Saver\r\nconst screensaverTimer = useRef();\r\nconst resetTimer = useRef();\r\nconst deactivateScreenSaver = useCallback((duration) => {\r\n  dispatch({type: 'deactivateScreenSaver'});\r\n    //Set Timer\r\n    clearTimeout(screensaverTimer.current);\r\n    screensaverTimer.current = setTimeout(() => dispatch({type: 'activateScreenSaver' }), duration || IMAGE.SCREENSAVER_INACTIVE_TIME);\r\n    clearTimeout(resetTimer.current);\r\n    if(isScreenSaverActive) resetTimer.current = setTimeout(()=>routeHistory.push('/'), (duration || IMAGE.SCREENSAVER_INACTIVE_TIME)*3);\r\n  }, []);\r\n  useEffect(()=>deactivateScreenSaver(),[]); //call initially\r\n\r\n      //Allows Parent: App.js to call on all mouse movements\r\n      useImperativeHandle(ref, () => ({\r\n        deactivateScreenSaver() {\r\n          deactivateScreenSaver();\r\n        }\r\n      }));\r\n    \r\nreturn((!showScreenSaver) ? <div className='none no-size'></div> : \r\n    <div key='ScreenSaver Component' style={{zIndex: 20,\r\n      position: 'absolute',\r\n      width: '100vw',\r\n      height: '100vh',\r\n      opacity: screenSaverOpacity,\r\n      transition: `all ${IMAGE.TRANSITION_INTERVAL*0.5}ms ease`\r\n    }}\r\n    // onClick={()=>deactivateScreenSaver()}\r\n    // onMouseMove={()=>deactivateScreenSaver()}\r\n    // onMouseLeave={()=>dispatch({type: 'activateScreenSaver' })}\r\n    >\r\n      <div key='ScreenSaver-black' style={{\r\n        position: 'absolute', \r\n        // zIndex: '0',\r\n        height:'100vh', \r\n        width: '100vw', \r\n        backgroundColor: 'black'\r\n        }}></div>\r\n      <div key='ScreenSaver Image' style={{position: 'absolute',  }}>\r\n        <img  className=\"\" src={IMAGE.location || defaultImage} alt={'screensaver'}  style={{\r\n          // zIndex: '9',\r\n          display: 'block',\r\n          objectFit: 'cover',\r\n          overflow: 'hidden',\r\n          width: '100vw', \r\n          height: '100vh', \r\n          opacity: IMAGE.isVisible ? calculateBrightness() : (calculateBrightness() > 0.2) ? 0.2 : 0,\r\n          transition: `all ${IMAGE.TRANSITION_INTERVAL*0.6}ms ease`}}/>\r\n      </div>\r\n          <Readings hideDetails={true}/>\r\n          <TimeBar />\r\n    </div>\r\n);\r\n\r\n});\r\n\r\nexport default ScreenSaver;","export default __webpack_public_path__ + \"static/media/frog-logo.61394956.png\";","\r\nimport React, {forwardRef} from 'react';\r\nimport { Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport '../index.css';\r\nimport './Menu.css';\r\nimport icon from './frog-logo.png';\r\n\r\n\r\nconst Menu = forwardRef((props, ref) => {\r\n    const routeHistory = useHistory();\r\n    const routeLocation = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return(<div>\r\n        <div id='menu-container-spacer'></div>\r\n        <div ref={ref} id='menu-container' className=' border-box' >\r\n            <div className='menu-icon-box' style={{ textDecoration: 'none' }} onClick={()=>{\r\n                if(routeLocation.pathname == '/') setTimeout(()=>dispatch({type: 'activateScreenSaver' }), 1500);\r\n                else routeHistory.push('/');\r\n            }}>\r\n                    <img className='menu-icon' src={icon} />\r\n                    <strong className='menu-icon-text'>Current</strong>\r\n            </div>\r\n            <Link to=\"/controls\" className='menu-icon-box' style={{ textDecoration: 'none' }}>\r\n                    <img className='menu-icon' src={icon} />\r\n                    <strong className='menu-icon-text'>Controls</strong>\r\n            </Link>\r\n            <Link to=\"/schedules\" className='menu-icon-box' style={{ textDecoration: 'none' }}>\r\n                <img className='menu-icon' src={icon} />\r\n                <strong className='menu-icon-text'>Schedules</strong>\r\n            </Link>\r\n            <Link to=\"/climate\" className='menu-icon-box' style={{ textDecoration: 'none' }}>\r\n                <img className='menu-icon' src={icon} />\r\n                <strong className='menu-icon-text'>Climate</strong>\r\n            </Link>\r\n            <Link to=\"/history\" className='menu-icon-box' style={{ textDecoration: 'none' }}>\r\n                <img className='menu-icon' src={icon} />\r\n                <strong className='menu-icon-text'>History</strong>\r\n            </Link>\r\n            <div className='menu-icon-box' style={{ textDecoration: 'none' }} onClick={()=>{\r\n                if(routeLocation.pathname == '/settings') routeHistory.push('/log');\r\n                else routeHistory.push('/settings');\r\n            }}>\r\n                    <img className='menu-icon' src={icon} />\r\n                <strong className='menu-icon-text'>Settings</strong>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n});\r\n\r\nexport default Menu;","\r\nconst DURATION_LIST = [ //return in millisecond and interpret slider\r\n    {name: '1m', value: 1 * 60 * 1000},\r\n    {name: '2m', value: 2 * 60 * 1000},\r\n    {name: '3m', value: 3 * 60 * 1000},\r\n    {name: '4m', value: 4 * 60 * 1000},\r\n    {name: '5m', value: 5 * 60 * 1000},\r\n    {name: '6m', value: 6 * 60 * 1000},\r\n    {name: '7m', value: 7 * 60 * 1000},\r\n    {name: '8m', value: 8 * 60 * 1000},\r\n    {name: '9m', value: 9 * 60 * 1000},\r\n    {name: '10m', value: 10 * 60 * 1000},\r\n    {name: '15m', value: 15 * 60 * 1000},\r\n    {name: '30m', value: 30 * 60 * 1000},\r\n    {name: '45m', value: 45 * 60 * 1000},\r\n    {name: '1h', value: 60 * 60 * 1000},\r\n    {name: '2h', value: 2 * 60 * 60 * 1000},\r\n    {name: '3h', value: 3 * 60 * 60 * 1000},\r\n    {name: '4h', value: 4 * 60 * 60 * 1000},\r\n    {name: '5h', value: 5 * 60 * 60 * 1000},\r\n    {name: '6h', value: 6 * 60 * 60 * 1000},\r\n    {name: '12h', value: 12 * 60 * 60 * 1000},\r\n    {name: '1d', value: 24 * 60 * 60 * 1000},\r\n    {name: '3d', value: 3 * 24 * 60 * 60 * 1000},\r\n    {name: '1w', value: 7 * 24 * 60 * 60 * 1000},\r\n    {name: '2w', value: 14 * 24 * 60 * 60 * 1000},\r\n    {name: '1M', value: 30 * 24 * 60 * 60 * 1000},\r\n];\r\n\r\nexport default DURATION_LIST;\r\n\r\nexport const getDurationName = (v, places = 1) => {\r\n    try{const value = parseInt(v);\r\n            if((value / (30 * 24 * 60 * 60 * 1000)) >= 1) return `${Math.floor(value / (30 * 24 * 60 * 60 * 1000) * (places * 10))/(places * 10)}M`;\r\n            else if((value / (7 * 24 * 60 * 60 * 1000)) >= 1) return `${Math.floor(value / (7 * 24 * 60 * 60 * 1000) * (places * 10))/(places * 10)}w`;\r\n            else if((value / (24 * 60 * 60 * 1000)) >= 1) return `${Math.floor(value / (24 * 60 * 60 * 1000) * (places * 10))/(places * 10)}d`;\r\n            else if((value / (60 * 60 * 1000)) >= 1) return `${Math.floor(value / (60 * 60 * 1000) * (places * 10))/(places * 10)}h`;\r\n            else if((value / (60 * 1000)) >= 1) return `${Math.floor(value / (60 * 1000))}m`;\r\n            else return 'ZERO';\r\n    } catch(error){return 'INVALID';}\r\n}\r\n\r\nexport const getDurationValue = (name) => {\r\n    try{ const cleanedValue = /\\d+/.exec(name)[0];\r\n        const value = parseInt(cleanedValue);\r\n        const label = /[a-zA-Z]+/.exec(name)[0];\r\n\r\n        if(label == 'm') return value * 60 * 1000;\r\n        else if(label == 'h')  return value * 60 * 60 * 1000;\r\n        else if(label == 'd')  return value * 24 * 60 * 60 * 1000;\r\n        else if(label == 'w')  return value * 7 * 24 * 60 * 60 * 1000;\r\n        else if(label == 'M')  return value * 30 * 24 * 60 * 60 * 1000;\r\n        else return value;\r\n    } catch(error){return 0;}\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport useInterval from '../useInterval';\r\nimport DURATION_LIST from './Duration';\r\nimport SettingsButton, {HoldButton} from '../Settings/SettingsButton';\r\nimport {fetchData} from '../index';\r\n\r\nimport '../index.css';\r\nimport './Control.css';\r\n\r\nconst ACTIVE_COLOR = 'rgba(0, 102, 0, 0.6)';\r\nconst DEACTIVE_COLOR = 'rgba(0, 0, 0, 0.5)';\r\nconst EXCLUDE_CONTROL_TYPES = ['On', 'Off'];\r\n\r\n//auto generate type button\r\n\r\nconst MakeToggle = (props) => {\r\n    const [timer, setTimer] = useState(1);\r\n    const interval = useInterval(()=>{setTimer((props.until - new Date().getTime()) * (((props.until - new Date().getTime()) < 0) ? -1 : 1)); }, 1000);\r\n    const overridden = /(severe|schedule|toggle|immediate)/i.test(props.topReason);\r\n    const severe = /(severe|extreme)/i.test(props.topReason);\r\n\r\n    return (\r\n    <div className='none control-toggle-outer' style={{}} onClick={props.onClick}> \r\n        <div className='none control-toggle-inner' style={{borderColor: props.isSelected ? 'whitesmoke' : props.select ? 'transparent' : overridden ? 'var(--accent-color)' : 'transparent',\r\n                backgroundColor: severe ? 'darkred' : props.active ? ACTIVE_COLOR : DEACTIVE_COLOR, }}>\r\n            <strong className='none control-toggle-text'>{props.title}</strong>\r\n            <p className='none control-toggle-timer' style={{}} >{props.topReason}</p>\r\n            <p className='none control-toggle-timer' style={{fontSize: '0.75rem', color: ((props.until - new Date().getTime()) < 0) ? 'gold' : null}} >{(props.until <= 0) ? `${props.active ? 'ON' : 'OFF'} : INDEFINITELY` : `${(timer>3600000)?`${Math.floor(timer/3600000)}:`:''}${(timer>60000)?`${Math.floor((timer%3600000)/60000)}:`:''}${((timer>60000) && (timer%60000<10000))?'0':''}${Math.floor((timer%60000)/1000)}` }</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default function Control(props) {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const DATA = useSelector(root => root.data);\r\n    const [durationIndex, setDurationIndex] = useState(10)\r\n    const [selectMode, setSelectMode] = useState(false);\r\n    const [selectedList, setSelectedList] = useState([]);\r\n    const [controlTypes, setControlTypes] = useState([]);\r\n    useEffect(()=>{if(DATA.controlTypes != undefined) setControlTypes(DATA.controlTypes);\r\n                const smartIndex = DURATION_LIST.findIndex(d=>(d.value > (DATA.timeNextEvaluation - new Date().getTime())))-1;  \r\n                if(smartIndex > 4) setDurationIndex(smartIndex); },[DATA]);\r\n\r\n    const shortedNameList = (names) => {  \r\n        for(var i=0; i<DATA.controlTypes.length; i++) {let match = true;\r\n            for(var y=0; y<DATA.CONTROLS.length; y++) {\r\n                if((names.includes(DATA.CONTROLS[y].name) && !DATA.CONTROLS[y].types.includes(DATA.controlTypes[i]))\r\n                    || !names.includes(DATA.CONTROLS[y].name) && DATA.CONTROLS[y].types.includes(DATA.controlTypes[i])) { match = false; break;}\r\n            } if(match) return `[${DATA.controlTypes[i]}]`;\r\n        } let result = '';\r\n         names.forEach(name =>  result += ('-'+(name.match(/\\b(\\w)/g).join('.'))));\r\n        return `(${result.substring(1).toUpperCase()})`;//removes first dash :)\r\n    }\r\n\r\n    const scheduleNow = async(password, names, set = true, reason = `Immediate ${shortedNameList(names)}`) =>  await axios.post(`${SERVER_URL}/schedule-add/`, {\r\n                                PASSWORD: password, time: new Date().getTime(), title: reason, names: JSON.stringify(names), duration: DURATION_LIST[durationIndex].value, set: (set || set == 'true'), repeat: 0\r\n                            }).then((response) => {setTimeout(()=>fetchData(),10000); return 'EXECUTING';}).catch((error) => error.response ? error.response.status : false);\r\n\r\n    //Filter Control Types List\r\n    const getControlTypes = () => { const typesMap = new Map();\r\n        //Populate Map    \r\n        DATA.CONTROLS.forEach((c,i)=>c.types.forEach(t=>typesMap.set(t, [...(typesMap.get(t) || []), c.id])));\r\n        //Filter            \r\n        return [...typesMap].filter(([type, controlList], index, mapList) => \r\n                (controlList.length > 1) \r\n                && (selectMode || !EXCLUDE_CONTROL_TYPES.includes(type)) \r\n                && (mapList.findIndex(([k, v], i) => (v.toString() == controlList.toString())) === index) //Remove Duplicates\r\n            ).map(([type, controlList])=>type);\r\n    }\r\n\r\n\r\n    return(\r\n        <div id='control-container'>\r\n            <div id='duration-box' >\r\n                <label id='duration-label' style={{color:'white'}} onClick={()=>setDurationIndex(10)}>{DURATION_LIST[durationIndex].name}</label>\r\n                <input id='duration-slider' type='range' min={0} max ={DURATION_LIST.length-1} value={durationIndex} onChange={(event) => setDurationIndex(event.target.value)} />\r\n            </div>\r\n            <div id='control-box'>\r\n                {DATA.CONTROLS === undefined ? <div></div> :\r\n                DATA.CONTROLS.map((c) => <SettingsButton key={c.name} \r\n                    title={\r\n                        <MakeToggle \r\n                            title={c.name} \r\n                            active= {(c.settings[0].set || c.settings[0].set == 'true')}\r\n                            topReason= {c.settings[0].reason}\r\n                            until= {c.settings[0].until}\r\n                            select={selectMode}\r\n                            isSelected = {selectedList.includes(c.name)}\r\n                            onClick={()=>{}}\r\n        \r\n                        />}\r\n                    pendingText='SCHEDULING'\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', width: '15.0rem'}}\r\n                    verifyLevel={1}\r\n                    onUpdate = {(password) =>  {if(selectMode) {(selectedList.includes(c.name) ? setSelectedList((list) => [...list.filter(name => name !== c.name)]) : setSelectedList((list) => [...list, c.name])); return null;}\r\n                            else return scheduleNow(password, [c.name], !(c.settings[0].set || (c.settings[0].set == 'true')), `Toggle ${shortedNameList([c.name])}`)}}/>)\r\n                    }\r\n            </div>\r\n                <div id='control-select-box'>\r\n                    <SettingsButton title={selectMode ? 'ALL' : 'ON'}\r\n                        pendingText='ACTIVATING'\r\n                        condense={true}\r\n                        buttonColor={'rgba(0, 0, 0, 0.95)'}\r\n                        buttonStyle={{border: 'none', padding: '0.70rem 2rem', fontSize: '0.9rem', width: 'auto', minWidth: '6.0rem', borderRadius: '0.5rem'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>selectMode ? setSelectedList([...DATA.CONTROLS.map(c=>c.name)]) : scheduleNow(password, [...DATA.CONTROLS.map(c=>c.name)], true, 'ALL ON')} />\r\n                    <SettingsButton title='ACTIVE'\r\n                        pendingText='SCHEDULING'\r\n                        condense={true}\r\n                        buttonColor={'rgba(0, 0, 0, 0.95)'}\r\n                        buttonStyle={{display: !selectMode ? 'none' : null, border: 'none', padding: '0.70rem 2rem', fontSize: '0.9rem', width: 'auto', minWidth: '6.0rem', borderRadius: '0.5rem'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>selectMode ? setSelectedList([...DATA.CONTROLS.filter((c)=>c.settings[0].set).map(c=>c.name)]) : scheduleNow(password, [...DATA.CONTROLS.filter((c)=>c.settings[0].set).map(c=>c.name)], false, 'DEACTIVATING')} />\r\n                    <SettingsButton title='INACTIVE'\r\n                        pendingText='SCHEDULING'\r\n                        condense={true}\r\n                        buttonColor={'rgba(0, 0, 0, 0.95)'}\r\n                        buttonStyle={{display: !selectMode ? 'none' : null, border: 'none', padding: '0.70rem 2rem', fontSize: '0.9rem', width: 'auto', minWidth: '6.0rem', borderRadius: '0.5rem'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>selectMode ? setSelectedList([...DATA.CONTROLS.filter((c)=>!c.settings[0].set).map(c=>c.name)]) : scheduleNow(password, [...DATA.CONTROLS.filter((c)=>!c.settings[0].set).map(c=>c.name)], true, 'ACTIVATING')} />\r\n                    {getControlTypes().map((t,i)=><SettingsButton key={t} title={t}\r\n                        pendingText='SCHEDULING'\r\n                        condense={true}\r\n                        buttonColor={'rgba(0, 0, 0, 0.95)'}\r\n                        buttonStyle={{border: 'none', padding: '0.70rem 2rem', fontSize: '0.9rem', width: 'auto',  minWidth: '6.0rem', borderRadius: '0.5rem'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>selectMode ? setSelectedList(original => [...DATA.CONTROLS.filter((c)=>c.types.includes(t)).map(c=>c.name)].every((val, i, arr) => selectedList.includes(val)) \r\n                                    ? [...DATA.CONTROLS.filter((c)=>(!c.types.includes(t) && original.includes(t))).map(c=>c.name)] \r\n                                    : [...DATA.CONTROLS.filter((c)=>c.types.includes(t)).map(c=>c.name)]) \r\n                                    : scheduleNow(password, [...DATA.CONTROLS.filter((c)=>c.types.includes(t)).map(c=>c.name)], \r\n                                        ([...DATA.CONTROLS.filter((c)=>c.types.includes(t))].every((val, i, arr) => val.settings[0].set == arr[0].settings[0].set) && [...DATA.CONTROLS.filter((c)=>c.types.includes(t))].length)\r\n                                        ? ![...DATA.CONTROLS.filter((c)=>c.types.includes(t))][0].settings[0].set : true, `Immediate ${t}`)} />)}\r\n                     <SettingsButton title={selectMode ? 'NONE' : 'OFF'}\r\n                        pendingText='DEACTIVATING'\r\n                        condense={true}\r\n                        buttonColor={'rgba(0, 0, 0, 0.95)'}\r\n                        buttonStyle={{border: 'none', padding: '0.70rem 2rem', fontSize: '0.9rem', width: 'auto', minWidth: '6.0rem', borderRadius: '0.5rem'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>selectMode ? setSelectedList([]) : scheduleNow(password, [...DATA.CONTROLS.map(c=>c.name)], false, 'ALL OFF')} />\r\n                </div>\r\n            {selectMode ? \r\n                <div id='control-select-box'>\r\n                    <SettingsButton title='ON'\r\n                        pendingText='ACTIVATING'\r\n                        condense={true}\r\n                        // buttonColor={'rgba(255, 255, 255, 0.5)'}\r\n                        buttonStyle={{border: 'none', padding: '0.45rem 2rem', width: 'auto',  minWidth: '6.0rem', borderRadius: '0.5rem', color: 'black'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>scheduleNow(password, selectedList, true)} />\r\n                    <SettingsButton title='OFF'\r\n                        pendingText='DEACTIVATING'\r\n                        condense={true}\r\n                        // buttonColor={'rgba(255, 255, 255, 0.5)'}\r\n                        buttonStyle={{border: 'none', padding: '0.45rem 2rem', width: 'auto', minWidth: '6.0rem', borderRadius: '0.5rem', color: 'black'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>scheduleNow(password, selectedList, false)} />\r\n                    <button className='none control-button control-button-exit' onClick={()=>{setSelectMode(false); setSelectedList([]);}}>Exit</button>\r\n                    {/* <button className='none control-button' onClick={()=>{}}>Schedule</button> */}\r\n                </div>\r\n                : <div id='control-select-box'>\r\n                    <button className='none control-button' onClick={()=>setSelectMode(true)}>Select</button>\r\n                </div>\r\n            }\r\n            <HoldButton duration={DURATION_LIST[durationIndex].value} verifyLevel={(DURATION_LIST[durationIndex].value < (24*60*60*1000)) ? 1 : 2} buttonStyle={{padding: '0.4rem'}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, {useState,  useEffect} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\nimport dateFormat from 'dateformat';\r\nimport DURATION_LIST, {getDurationName, getDurationValue} from '../Duration';\r\nimport SettingsButton, {HoldButton} from '../../Settings/SettingsButton';\r\nimport Verify from '../../Verify';\r\n\r\nimport '../../index.css';\r\nimport './Schedule.css';\r\n\r\nconst getButtonColor=(buttonText)=> (buttonText=='UPDATE' || buttonText=='') ? 'var(--main-color)' : (buttonText=='PASS' || buttonText=='INVALID' || buttonText=='FAILED') ? '#e8000d' : (buttonText=='PENDING' || buttonText=='BLANK') ? 'orange' : '#cc5500';\r\n\r\nconst DropMenu = (props) => {\r\n    const [custom, setCustom] = useState(props.customDefault);\r\n    const [multipleList, setMultipleList] = useState(props.multipleList);\r\n    const openList = useSelector(root => root.dropListOpen);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{setMultipleList(props.multipleList);},[props.multipleList]); //Syncing single selection with custom\r\n    useEffect(()=>{setCustom(props.customDefault);},[props.customDefault]); //Syncing single selection with custom\r\n\r\n\r\n    //Guidelines Abstracted\r\n    const buttonColor = (props.buttonColor != undefined) ? props.buttonColor : '';\r\n    const customName = (props.customName != undefined) ? props.customName : false;\r\n    const inputType = (props.inputType != undefined) ? props.inputType : 'text';\r\n    const selectMultiple = (multipleList != undefined);\r\n\r\n    return(<div className='schedule-drop-menu-container' style={props.outerStyle} onFocus={()=>{}} onBlur={()=>{}} >\r\n        <button className={`schedule-input schedule-drop-menu-button ${props.buttonStyleClass || ''}`} style={{color: (isNaN(props.value)) ? 'white' : buttonColor, backgroundColor: (isNaN(props.value)) ? buttonColor : null}} onClick={()=>dispatch({type: 'setDropList', payload: props.dropListId})}>{(props.value != undefined) ? props.value : (props.multipleList != undefined) ? props.multipleList.toString() : ''}{props.subValue ? <span><label style={{color: 'grey', margin: '0 0.5rem'}}>|</label><label style={{color: 'orange'}}>{props.subValue || ''}</label></span> : null}</button>\r\n        {(openList == props.dropListId) ? <div className='schedule-drop-menu-list' style={{top: props.options.length <= 5 ? null : '5vh'}}>\r\n                    <button key='cancel-button' className='schedule-drop-menu-item' style={{borderBottom: '1px solid whitesmoke', color: 'var(--main-color)'}} onClick={()=>{\r\n                                dispatch({type: 'setDropList'});\r\n                            }}>Cancel</button>\r\n            {selectMultiple ? <button key='save-button-1' className='schedule-drop-menu-item schedule-save-button' style={{borderBottom: '1px solid whitesmoke', marginTop: 0}} onClick={()=>{\r\n                        props.onSelect(multipleList);\r\n                        dispatch({type: 'setDropList'});\r\n                    }}>SAVE</button>:<div className='none no-size'></div>}\r\n                {props.options.map((option, i) => \r\n                    <button key={`${option}-${JSON.stringify(multipleList)}`} className='schedule-drop-menu-item' style={{ border: (selectMultiple ? multipleList.includes(option) : props.value == option) ? '1px solid var(--main-color)' : 'none', backgroundColor: (option == 'UPDATE') ? 'var(--main-color)' : (option == 'DELETE') ? 'red' : '',  color: (option == 'UPDATE') ? 'white' : (option == 'DELETE') ? 'black' : ''}} onClick={()=>{\r\n                        if(selectMultiple && multipleList.includes(option)) setMultipleList(multipleList.filter(m => m != option));\r\n                        else if(selectMultiple) setMultipleList([...multipleList, option]);\r\n                        else { props.onSelect(option);\r\n                        dispatch({type: 'setDropList'});\r\n                    }}}>{option}</button>\r\n                )}\r\n                {(props.extraList && selectMultiple) ? <button key='save-button-2' className='schedule-drop-menu-item schedule-save-button' style={{borderTop: '1px solid whitesmoke', borderBottom: '1px solid whitesmoke'}} onClick={()=>{\r\n                        props.onSelect(multipleList);\r\n                        dispatch({type: 'setDropList'});\r\n                    }}>{props.extraName || 'SAVE'}</button>:<div className='none no-size'></div>}\r\n                {props.extraList ? props.extraList.map((option, i) => \r\n                    <button key={`${option}-${JSON.stringify(multipleList)}`} className='schedule-drop-menu-item' style={{border: (selectMultiple ? multipleList.includes(option) : props.value == option) ? '1px solid var(--main-color)' : 'none', backgroundColor: (option == 'UPDATE') ? 'var(--main-color)' : (option == 'DELETE') ? 'red' : '',  color: (option == 'UPDATE') ? 'white' : (option == 'DELETE') ? 'black' : ''}} onClick={()=>{\r\n                        props.onExtra(option);\r\n                        dispatch({type: 'setDropList'});\r\n                    }}>{option}</button>\r\n                ) : null}\r\n                {customName ? <div className='none' style={{display:'inline-grid', gridColumn: 1}}>\r\n                        <input key='settings-add-input' type={inputType} className='schedule-drop-menu-item' style={{gridColumn: 1, width: '10.0rem', border: 'none', borderRadius: 0, border: '1px solid whitesmoke', backgroundColor: 'black', color: 'white'}} \r\n                            value={custom}\r\n                            onChange={(c)=>setCustom(c.target.value)}\r\n                            onKeyPress={(e)=>{ if (e.charCode == 13) {\r\n                                props.onSelect(selectMultiple ? [...multipleList, custom] : custom);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}}/>\r\n                        <button key='settings-add-button' className='schedule-drop-menu-item' style={{gridColumn: 2, border: 'none', borderRadius: 0, borderBottom: '1px solid whitesmoke', backgroundColor: 'whitesmoke', color: 'black'}} onClick={()=>{\r\n                                props.onSelect(selectMultiple ? [...multipleList, custom] : custom);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}>{customName}</button>\r\n                </div> : <div className='none no-size'></div>}\r\n                {selectMultiple ? <button key='save-button-3' className='schedule-save-button schedule-drop-menu-item ' style={{borderTop: '1px solid whitesmoke', marginBottom: 0}} onClick={()=>{\r\n                        props.onSelect(multipleList);\r\n                        dispatch({type: 'setDropList'});\r\n                    }}>SAVE</button>:<div className='none no-size'></div>}\r\n            </div>\r\n        : <div ></div>}\r\n    </div>);\r\n}\r\nconst getDateAbbreviation = (t) => {const time = parseInt(t) || 0;\r\n    const day = new Date(time).getDate(); \r\n    if(day == 1 || day == 21 || day == 31) return `${dateFormat(time, 'mmm')}, ${day}st`;\r\n    else if(day == 2 || day == 22) return `${dateFormat(time, 'mmm')}, ${day}nd`;\r\n    else if(day == 3 || day == 23) return `${dateFormat(time, 'mmm')}, ${day}rd`;\r\n    else return `${dateFormat(time, 'mmm')}, ${day}th`;\r\n}\r\n//labels yesterday, today, tomorrow, within week (sunday); otherwise date with abbreviation\r\nconst getDay = (t) => { const time = parseInt(t) || 0; let today = new Date(); today.setHours(0,0,0,0); const tomorrow = new Date(today.getTime()+(24*60*60*1000)); const yesterday = new Date(today.getTime()-(24*60*60*1000)); \r\n    if(time >= today.getTime() && time < tomorrow.getTime()) return `Today`;\r\n    if(time >= tomorrow.getTime() && time < (new Date(tomorrow.getTime()+(24*60*60*1000)).getTime())) return `Tomorrow`;\r\n    if(time >= (new Date(yesterday.getTime()-(24*60*60*1000)).getTime()) && time < today.getTime()) return `Yesterday`;\r\n    if(time >= (new Date(today.getTime()-(6*24*60*60*1000)).getTime()) && time <= (new Date(today.getTime()+(7*24*60*60*1000)).getTime())) {\r\n        const day = new Date(time).getDay();    \r\n        return day == 0 ? 'Sunday' : day == 1 ? 'Monday' : day == 2 ? 'Tuesday' : day == 3 ? 'Wednesday' : day == 4 ? 'Thursday' : day == 5 ? 'Friday' : day == 6 ? 'Saturday' : 'New Day';\r\n    } else return getDateAbbreviation(time);\r\n}\r\nconst getDateList = () => { const list = [];\r\n        let time = new Date(); time = time.setHours(7,0,0,0); \r\n        for(var i=(0); i<(30); i++){  list.push(time); time += (24*60*60*1000);  }\r\n        return list;\r\n    }\r\nconst DropDateMenu = (props) => {\r\n    const openList = useSelector(root => root.dropListOpen);\r\n    const [customDate, setCustomDate] = useState(props.time);\r\n    // const [customTime, setCustomTime] = useState((props.time % (24*60*60*1000))/(60000)); //Handle Time Locally below in <input/>\r\n    // useEffect(()=>{setCustomDate(props.time); setCustomTime(props.time % (24*60*60*1000));}, [props.time])\r\n    const dispatch = useDispatch();\r\n    return(<div className='schedule-drop-menu-container' style={props.outerStyle} onFocus={()=>{}} onBlur={()=>{}} >\r\n        <button className={`schedule-input schedule-drop-menu-button ${props.buttonStyleClass || ''}`} onClick={()=>dispatch({type: 'setDropList', payload: props.dropListId})}>{`${getDay(props.time)} ${dateFormat(parseInt(props.time) || 0, 'H:MM')}`}</button>\r\n        {(openList == props.dropListId) ? <div className='schedule-drop-date-menu' style={{}} >\r\n                <div className='schedule-drop-menu-list' style={{top: '5vh', gridRow: 1, gridColumn: 1, left: '2.0rem'}}>         \r\n                    <label key='cancel-button' className='schedule-drop-menu-item' style={{gridRow: (1), borderBottom: '1px solid whitesmoke', color: 'var(--main-color)'}} onClick={()=>{\r\n                               dispatch({type: 'setDropList'});\r\n                            }}>Cancel</label>  \r\n                    {getDateList().map((t, i) => \r\n                        <label key={t} className='schedule-drop-menu-item' style={{gridRow: (i+2), border: ((new Date(props.time).getMonth() == (new Date(t).getMonth())) && (new Date(props.time).getDate() == (new Date(t).getDate()))) ? '1px solid var(--main-color)' : 'none'}} onClick={()=>{\r\n                            props.onSelect(t);\r\n                            // dispatch({type: 'setDropList'});\r\n                        }}>{getDay(t)}</label>)}\r\n                    <div className='none' style={{display:'inline-grid', gridColumn: 1}}>\r\n                        <input key='settings-add-input' type='number' step={24*60*60*1000} className='schedule-drop-menu-item' style={{gridColumn: 1, width: '10.0rem', border: 'none', borderRadius: 0, border: '1px solid whitesmoke', backgroundColor: 'black', color: 'white'}} \r\n                            value={customDate}\r\n                            onChange={(c)=>setCustomDate(c.target.value)}\r\n                            onKeyPress={(e)=>{ if (e.charCode == 13) {\r\n                                props.onSelect(customDate);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}}/>\r\n                        <button key='settings-add-button' className='schedule-drop-menu-item' style={{gridColumn: 2, border: 'none', borderRadius: 0, borderBottom: '1px solid whitesmoke', backgroundColor: 'whitesmoke', color: 'black'}} onClick={()=>{\r\n                                props.onSelect(customDate);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}>EPOCH</button>\r\n                    </div>\r\n                </div>\r\n                <div className='schedule-drop-menu-list' style={{top: '5vh', gridRow: 1, gridColumn: 1, right: '2.0rem'}}>  \r\n                        <label key='cancel-button' className='schedule-drop-menu-item' style={{gridRow: (1), borderBottom: '1px solid whitesmoke', color: 'var(--main-color)'}} onClick={()=>{\r\n                                dispatch({type: 'setDropList'});\r\n                            }}>Cancel</label>               \r\n                    {[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24].map((h, i) => \r\n                        <label key={h} className='schedule-drop-menu-item' style={{gridRow: (i+2), border: (new Date(props.time).getHours() == (h)) ? '1px solid var(--main-color)' : 'none'}} onClick={()=>{\r\n                            props.onSelect(new Date(props.time).setHours(h,0,0,0)); setCustomDate(new Date(props.time).setHours(h,0,0,0));\r\n                            dispatch({type: 'setDropList'});\r\n                        }}>{h} : 00</label>)}\r\n                        <div className='none' style={{display:'inline-grid', gridColumn: 1}}>\r\n                        <input key='settings-add-input' type='number' step={60} className='schedule-drop-menu-item' style={{gridColumn: 1, width: '10.0rem', border: 'none', borderRadius: 0, border: '1px solid whitesmoke', backgroundColor: 'black', color: 'white'}} \r\n                            value={(new Date(customDate).getHours()*60) + (new Date(customDate).getMinutes())}\r\n                            onChange={(c)=>setCustomDate(new Date(props.time).setHours(0,(c.target.value),0,0))}\r\n                            onKeyPress={(e)=>{ if (e.charCode == 13) {\r\n                                props.onSelect(customDate);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}}/>\r\n                        <button key='settings-add-button' className='schedule-drop-menu-item' style={{gridColumn: 2, border: 'none', borderRadius: 0, borderBottom: '1px solid whitesmoke', backgroundColor: 'whitesmoke', color: 'black'}} onClick={()=>{\r\n                                props.onSelect(customDate);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}>Time (m)</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        : <div ></div>}\r\n    </div>);\r\n}\r\n\r\nconst ScheduleRow = (props) => {\r\n    const DATA = useSelector(root => root.data);   \r\n    const dispatch = useDispatch(); \r\n    const [pendingAction, setPendingAction] = useState(undefined);\r\n    const [verification, setVerification] = useState(undefined);\r\n    const [buttonText, setButtonText] = useState('');\r\n\r\n    const [priority, setPriority] = useState(props.priority || null);\r\n    const [time, setTime] = useState(props.time || new Date().setMinutes(0,0,0));\r\n    const [title, setTitle] = useState(props.title || '');\r\n    const [titleEdited, setTitleEdited] = useState(false); //Detect Auto Populate Name\r\n    const [names, setNames] = useState(props.names || []);\r\n    const [duration, setDuration] = useState(props.duration || (15*60*1000));\r\n    const [set, setSet] = useState(props.set || true);\r\n    const [repeat, setRepeat] = useState(props.repeat || 0);\r\n\r\n    const resetVariables = (clear = false) => { \r\n        setPriority(props.priority || null);\r\n        setTime((clear || props.time == undefined) ? new Date().setMinutes(0,0,0) : props.time);\r\n        setTitle((clear || props.title == undefined) ? '' : props.title);\r\n        setNames((clear || props.names == undefined) ? [] : props.names);\r\n        setDuration((clear || props.duration == undefined) ? (15*60*1000) : props.duration);\r\n        setSet((clear || props.set == undefined) ? true : props.set);\r\n        setRepeat((clear || props.repeat == undefined) ? 0 : props.repeat);\r\n        if(clear) setButtonText('NEW');\r\n    }\r\n    useEffect(()=>resetVariables(),[props]);    \r\n    useEffect(()=>resetVariables(),[props]); \r\n\r\n    //Guidelines Abstracted\r\n    const verifyLevel = (props.verifyLevel != undefined) ? props.verifyLevel : 1;\r\n    const insertNew = (props.insertNew != undefined);\r\n\r\n    const isControlsChanged = () => {if(!props.names) return true;\r\n        if(Array.isArray(props.names))\r\n        for(var i=0; i<props.names.length; i++) {\r\n                if(!names.includes(props.names[i])) return true;\r\n        } if(Array.isArray(names))\r\n        for(var y=0; y<names.length; y++) {\r\n            if(!props.names.includes(names[y])) return true;\r\n        } return false;\r\n    }\r\n    const isTimeChanged = () =>(!props.time || props.time != time);\r\n    const isTitleChanged = () =>(!props.title || props.title != title);\r\n    const isDurationChanged = () =>(!props.duration || props.duration != duration);\r\n    const isSetChanged = () =>(props.set != set);\r\n    const isRepeatChanged = () => (props.repeat == undefined || props.repeat != repeat);\r\n    const isChanged=()=>{\r\n        if(isTimeChanged()) return true;\r\n        if(isTitleChanged()) return true;\r\n        if(!props.names || isControlsChanged()) return true;\r\n        if(isDurationChanged()) return true;\r\n        if(isSetChanged()) return true;\r\n        if(isRepeatChanged()) return true;\r\n        return false;\r\n    }\r\n    const isControlsValid = () => {\r\n        if(Array.isArray(names)) {\r\n            if(names.length == 0) return false;\r\n            for(var i=0; i<names.length; i++) {\r\n                if(names[i] == undefined) return false;\r\n        }} else if(!names || !names.length) return false;\r\n        return true;\r\n    }\r\n    const isTimeValid = () =>(time && !isNaN(time));\r\n    const isTitleValid = () =>(title && title != '');\r\n    const isDurationValid = () =>(duration && !isNaN(duration));\r\n    const isSetValid = () =>(set == false || set == true);\r\n    const isRepeatValid = () => (repeat != null && repeat != undefined && !isNaN(repeat));\r\n    useEffect(()=>{ let text = isChanged() ? 'UPDATE' : ''; \r\n        if(!isTimeValid()) text='TIME';\r\n        if(!isTitleValid()) text='TITLE';\r\n        if(!isControlsValid()) text='CONTROLS';\r\n        if(!isDurationValid()) text='DURATION';\r\n        if(!isSetValid()) text='SET';\r\n        if(!isRepeatValid()) text='REPEAT';\r\n        setButtonText(text);\r\n    \r\n    if(!titleEdited && insertNew && names.length) \r\n        setTitle(`${shortedNameList()} ${set ? 'On' : 'Off'} for ${(duration>3600000)?`${Math.floor(duration/3600000)}:`:''}${(duration>60000)?`${Math.floor((duration%3600000)/60000)}:`:''}${((duration>60000) && (duration%60000<10000))?'0':''}${Math.floor((duration%60000)/1000)}`);\r\n    }, [priority, time, title, names, duration, set, repeat]);\r\n        \r\n    //*********************************\r\n    //   API REQUEST & VERIFICATION\r\n    //*********************************\r\n    const makeRequest=async(password, action)=>{ setVerification(undefined); //saving local until fetch up stream is called to replace data \r\n        if(verifyLevel == 1 && !localStorage.getItem(\"password\")) await localStorage.setItem(\"password\", password.toString());\r\n        const success = await props.onUpdate(action || pendingAction, password, priority, time, title, names, duration, set, repeat);\r\n        if(success == true || isNaN(success)) {setButtonText((success != true) ? success : 'SAVED'); setTimeout(()=>{if(insertNew) resetVariables(true);}, 5000);}\r\n        else if(success == 401) { setButtonText('PASS');  localStorage.clear(); setTimeout(()=>setButtonText('UPDATE'), 5000);}\r\n        else if(success == 404) { setButtonText('INVALID');  setTimeout(()=>resetVariables(), 5000);}\r\n        else {setButtonText('FAILED');  setTimeout(()=>resetVariables(), 5000);}\r\n        setPendingAction(undefined);\r\n        return buttonText;\r\n    }\r\n\r\n    const processUpdate=async(action)=>{ setButtonText('PENDING'); if(action) setPendingAction(action); \r\n        if(verifyLevel == 0) makeRequest(undefined, action); //No Security\r\n        else if(verifyLevel == 1 && !localStorage.getItem(\"password\")) setVerification('Enter Control Password to Continue:'); //Only Request if not stored\r\n        else if(verifyLevel == 1) makeRequest(localStorage.getItem(\"password\"), action); //Use Saved Password\r\n        else setVerification('Enter Advanced Passphrase to Proceed:'); //undefined || >1\r\n    }\r\n\r\n    //*********************************\r\n    //   HTML DISPLAY\r\n    //*********************************\r\n    const shortedNameList = (space = window.innerWidth) => { \r\n        if(!DATA.CONTROLS || !names || names.length == 0) return '-'; \r\n        if(DATA.CONTROLS != undefined && names.length == DATA.CONTROLS.length) return '[ALL]'; \r\n        if(names.length > 1) //Identify Common Type\r\n            for(var i=0; i<DATA.controlTypes.length; i++) {let match = true;\r\n                for(var y=0; y<DATA.CONTROLS.length; y++) {\r\n                    if((names.includes(DATA.CONTROLS[y].name) && !DATA.CONTROLS[y].types.includes(DATA.controlTypes[i]))\r\n                        || !names.includes(DATA.CONTROLS[y].name) && DATA.CONTROLS[y].types.includes(DATA.controlTypes[i])) { match = false; break;}\r\n                } if(match) return `[${DATA.controlTypes[i]}]`;\r\n            } \r\n        //Abbreviated List Names\r\n        let result = '';\r\n        names.forEach(name =>  result += (' - '+(space > 900 ? name : name.match(/\\b(\\w)/g).join('.'))));\r\n        return result.substring(3).toUpperCase();//removes first dash :)\r\n    }\r\n\r\n    const getUpdateOptions = () => {const list = ['DELETE', 'INCREASE', 'DECREASE'];\r\n        if(isChanged()) list.unshift('RESET');\r\n        if(buttonText == 'UPDATE') list.unshift('UPDATE'); return list;}\r\n\r\n    return <div className='none schedule-row'>\r\n            {(insertNew) ? <SettingsButton title={(buttonText != 'UPDATE') ? buttonText : 'SAVE'} buttonColor={(buttonText != 'UPDATE') ? 'orange' : 'var(--main-color)'} buttonStyle={{gridRow: 1, gridColumn: 1, height: '85%', width: 'auto', maxWidth: '100%', overflowX: 'auto'}}\r\n                    pendingText='SCHEDULING'\r\n                    condense={true}\r\n                    verifyLevel={1}\r\n                    onUpdate={async(password)=>(buttonText == 'UPDATE') ? await makeRequest(password, 'INSERT') : false}\r\n                />\r\n            : <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 1, backgroundColor: (buttonText != '') ? 'transparent' : (time < DATA.timeNextEvaluation) ? 'black' : null}}>\r\n                <DropMenu value={buttonText == '' ? priority : buttonText} dropListId={`${JSON.stringify(props)}-update`}   subValue={(props.overriddenList && props.overriddenList.length) ? `${props.overriddenList.join(', ')}` : undefined}      buttonColor={getButtonColor(buttonText)} customName='PRIORITY' inputType='number' \r\n                    customDefault={priority}\r\n                    options={getUpdateOptions()}\r\n                    onSelect={(action)=>{if(action == 'RESET') resetVariables(insertNew); else  processUpdate(action);}}\r\n                />\r\n            </section>                \r\n            }\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 2, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isTimeValid()) ? '1px solid darkred' : (isTimeChanged()) ? '1px solid var(--main-color)' : null}}>\r\n                <DropDateMenu  dropListId={`${JSON.stringify(props)}-time`}\r\n                    time={time}\r\n                    onSelect={(t)=>setTime(parseInt(t) || time)}\r\n                />\r\n            </section>\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 3, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isTitleValid()) ? '1px solid darkred' : (isTitleChanged()) ? '1px solid var(--main-color)' : null}}>\r\n                <input type='text' className={'schedule-input schedule-drop-menu-button'} onClick={()=>{setTitleEdited(true); dispatch({type: 'setDropList'});}} value={title} onChange={(event)=>setTitle(event.target.value)} />\r\n            </section>\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 4, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isControlsValid()) ? '1px solid darkred' : (isControlsChanged()) ? '1px solid var(--main-color)' : null}} >\r\n                <DropMenu value={shortedNameList()}   dropListId={`${JSON.stringify(props)}-names`}\r\n                    multipleList={[...names]}\r\n                    options={DATA.CONTROLS ? [...DATA.CONTROLS.map(c=>c.name)] : []}\r\n                    onSelect={(list)=>setNames(Array.isArray(list) ? [...list] : [list])}\r\n                    extraName='TYPES'\r\n                    extraList={DATA.controlTypes ? ['[ALL]', '[NONE]', ...DATA.controlTypes.map(t=>`[${t}]`)] : []}\r\n                    onExtra={(type)=>setNames((type == '[ALL]') ? [...DATA.CONTROLS.map(c=>c.name)] : (type == '[NONE]') ? [] : [...DATA.CONTROLS.filter(c=>c.types.includes(type.replace(/\\[|\\]/g, ''))).map(c=>c.name)])}\r\n                />             \r\n            </section>\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 5, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isDurationValid()) ? '1px solid darkred' : (isDurationChanged()) ? '1px solid var(--main-color)' : null}}>\r\n                <DropMenu value={getDurationName(duration)}   dropListId={`${JSON.stringify(props)}-duration`}\r\n                    options={DURATION_LIST.map(e => e.name)}\r\n                    customName='Minutes'\r\n                    inputType='number'\r\n                    customDefault={duration / 60000}\r\n                    onSelect={(d)=>setDuration(isNaN(d) ? getDurationValue(d) : (d * 60000))}\r\n                />\r\n            </section>\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 6, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isSetValid()) ? '1px solid darkred' : (isSetChanged()) ? '1px solid var(--main-color)' : null}}>\r\n                <DropMenu value={set ? 'ON' : 'OFF'}   dropListId={`${JSON.stringify(props)}-set`}\r\n                    options={['ON', 'OFF']} \r\n                    onSelect={(s)=>{setSet(s == 'ON')}}\r\n                />\r\n            </section>\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 7, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isRepeatValid()) ? '1px solid darkred' : (isRepeatChanged()) ? '1px solid var(--main-color)' : null}}>\r\n                <DropMenu value={repeat ? getDurationName(repeat) : 'ONCE'}   dropListId={`${JSON.stringify(props)}-repeat`}\r\n                    options={['ONCE', ...DURATION_LIST.map(e => e.name)]}\r\n                    customName='Minutes'\r\n                    inputType='number'\r\n                    customDefault={repeat / 60000}\r\n                    onSelect={(r)=>setRepeat((r == 'ONCE') ? 0 : isNaN(r) ? getDurationValue(r) : (r * 60000))}\r\n                />\r\n            </section>\r\n        {verification ?\r\n            <Verify\r\n                prompt={verification}\r\n                onSubmit={(password)=>makeRequest(password, pendingAction)}\r\n                onCancel={()=>{setVerification(undefined); setButtonText('UPDATE');}}\r\n            />  : <div className='none no-size' style={{position:'absolute'}}></div>}\r\n    </div>;\r\n}\r\n\r\n\r\nconst Schedule = (props) => {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const [SCHEDULES, setSCHEDULES] = useState([]);\r\n    const [sortByTime, setSortByTime] = useState(true);\r\n    const [calculatedList, setCalculatedList] = useState([]);\r\n\r\n    //Search Schedules for overlapping\r\n    const calculateOccurrenceList = (schedules = SCHEDULES, days=3) =>{ if(!schedules || !schedules.length) return; \r\n        let minimum = 0; let bottom = 0; const end = (new Date().getTime()+(days*24*60*60*1000)); let count=0;\r\n        const occurrences = [...schedules.map(s => ({time: s.time, duration: s.duration, repeat: s.repeat, priority: s.priority, names: s.names || [], overrides: []}))];\r\n        do { minimum = occurrences.reduce((min,s)=>(s.time < min && s.time > bottom) ? s.time : min, end); count++;\r\n            const least = occurrences.find(s=>(minimum == s.time)); \r\n            if(least == undefined) break; \r\n            occurrences.forEach(s => { if((!least.overrides.includes(s.priority)) && (least.priority > s.priority) && ((s.time) < (least.time + least.duration)) && ((s.time + s.duration) > (least.time)) && (least.names.some(e=>s.names.includes(e)))) least.overrides.push(s.priority);});\r\n            bottom  = least.time;\r\n            least.time += least.repeat;\r\n            if(count > 1000) {console.log('Schedule.calculateOccurrenceList() Maxed Search: ', count, occurrences); break;}\r\n        } while(minimum < end);\r\n        setCalculatedList([...occurrences.map(s=>({priority: s.priority, overrides: [...s.overrides.sort((a,b)=>(b-a))]}))]);\r\n    }\r\n\r\n    //API Referencing\r\n    const fetchSchedules = () => axios.get(`${SERVER_URL}/data-schedules/`).then((response) => { console.log('SCHEDULES', response.data.schedules);\r\n            setSCHEDULES(response.data.schedules);  calculateOccurrenceList(response.data.schedules);\r\n        }).catch((error) => {console.log('Failed to Fetch Schedule Information', error); return error.response ? error.response.status : false;});\r\n    useEffect(()=>fetchSchedules(),[]);\r\n\r\n    const getOverriddenList=(priority)=>{if(!calculatedList || (SCHEDULES.length != calculatedList.length) || priority == undefined) return [];\r\n        const list = calculatedList.find(s=>(s.priority == priority));\r\n        return list ? list.overrides : []; };\r\n\r\n    return( <div id='schedule-list' className='none border-box'>\r\n            <div className='none schedule-row'>\r\n                <label className='schedule-header' style={{gridColumn: 1}}>Edit</label>\r\n                <label className='schedule-header' style={{gridColumn: 2}}>Occurrence</label>\r\n                <label className='schedule-header' style={{gridColumn: 3}}>Title</label>\r\n                <label className='schedule-header' style={{gridColumn: 4}}>Control</label>\r\n                <label className='schedule-header' style={{gridColumn: 5}}>Duration</label>\r\n                <label className='schedule-header' style={{gridColumn: 6}}>Set</label>\r\n                <label className='schedule-header' style={{gridColumn: 7}}>Repeat</label>\r\n            </div>\r\n{/* LIST NEW SCHEDULE Fields */}\r\n          <ScheduleRow insertNew={true} \r\n            onUpdate={async(action, password, priority, time, title, names, duration, set, repeat)=>{\r\n                if(action == 'INSERT') return await axios.post(`${SERVER_URL}/schedule-add/`, {\r\n                    PASSWORD: password, time: time, title: title, names: JSON.stringify(names), duration: duration, set: set, repeat: repeat\r\n                }).then((response) => {fetchSchedules(); return true;}).catch((error) => error.response ? error.response.status : false);\r\n            }} />\r\n{/* LIST EXISTING props.SCHEDULES : onTap Editable */}\r\n            <div className='schedule-button-row'>\r\n                <SettingsButton title={sortByTime ? 'Sort Priority' : 'Sort Time'} buttonStyle={{padding: '0.40rem'}}\r\n                    condense={true}\r\n                    buttonColor='orange'\r\n                    verifyLevel={0}\r\n                    onUpdate={async(password)=>{setSortByTime(!sortByTime); return 'Sorting';}}\r\n                />\r\n                <HoldButton buttonColor='black' buttonStyle={{padding: '0.45rem'}}/>\r\n                <SettingsButton title='UPDATE' buttonStyle={{padding: '0.40rem'}} pendingText='RETRIEVING'\r\n                    condense={true}\r\n                    verifyLevel={1}\r\n                    onUpdate={async(password)=>{const response = await fetchSchedules(); return (response == true) ? 'UPDATED' : response; }}\r\n                />\r\n            </div>\r\n            {[...SCHEDULES.sort((a,b) => sortByTime ? (a.time - b.time) : (b.priority - a.priority))].map((schedule,index) => <ScheduleRow key={`Schedule-${index}`} verifyLevel={1}\r\n                priority={schedule.priority} time={schedule.time} title={schedule.title} names={schedule.names} duration={schedule.duration} set={(schedule.set == true || schedule.set == 1)} repeat={schedule.repeat} overriddenList={getOverriddenList(schedule.priority)}\r\n            onUpdate={async (action, password, priority, time, title, names, duration, set, repeat)=>{\r\n                if(action == 'DELETE') return await axios.post(`${SERVER_URL}/schedule-delete/`, {\r\n                    PASSWORD: password, priority: schedule.priority\r\n                }).then((response) => {fetchSchedules(); return true;}).catch((error) => error.response ? error.response.status : false);\r\n                else if(action == 'UPDATE')  return await axios.post(`${SERVER_URL}/schedule-replace/`, {\r\n                    PASSWORD: password, currentPriority: schedule.priority, priority: priority, time: time, title: title, names: JSON.stringify(names), duration: duration, set: set, repeat: repeat\r\n                }).then((response) => {fetchSchedules(); return true;}).catch((error) => error.response ? error.response.status : false);\r\n                else if(action == 'INCREASE' || action == 'DECREASE') return await axios.post(`${SERVER_URL}/schedule-priority-increase/`, {\r\n                    PASSWORD: password, priority: schedule.priority, increase: (action == 'INCREASE')\r\n                }).then((response) => {fetchSchedules(); return true;}).catch((error) => error.response ? error.response.status : false);\r\n                else if(!isNaN(parseInt(action))) return await axios.post(`${SERVER_URL}/schedule-update/`, {\r\n                    PASSWORD: password, priority: schedule.priority, attributeName: 'priority', value: parseInt(action) || 0\r\n                }).then((response) => {fetchSchedules(); return true;}).catch((error) => error.response ? error.response.status : false);\r\n\r\n            }} />)}\r\n    </div>);\r\n}\r\n\r\nexport default Schedule;","import React, {useState, useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport Verify from '../Verify';\r\n\r\nimport '../index.css';\r\nimport './Climate.css';\r\n\r\nconst getButtonColor=(buttonText)=>(buttonText=='') ? 'transparent' : (buttonText=='UPDATE') ? 'var(--main-color)' : (buttonText=='PASS' || buttonText=='INVALID' || buttonText=='FAILED') ? '#e8000d' : (buttonText=='PENDING' || buttonText=='BLANK') ? 'orange' : '#cc5500';\r\n\r\nconst Climate = (props) => {\r\n    const convertToFahrenheit = useSelector(root => root.convertToFahrenheit);\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const [CLIMATE, setCLIMATE] = useState([]);\r\n    const [range, setRange] = useState({maximumTemperature: 24, maximumHumidity: 75, minimumTemperature: 24, minimumHumidity: 75})\r\n    const [temperatureMode, setTemperatureMode] = useState(true);\r\n    const [saveButtonText, setSaveButtonText] = useState('Pending');\r\n    const [verification, setVerification] = useState(undefined);\r\n\r\n//API Referencing\r\n    const fetchClimate = () => axios.get(`${SERVER_URL}/data-climate/`).then((response) => { console.log('CLIMATE', response.data);\r\n        setCLIMATE(response.data.climate);  setSaveButtonText('');\r\n        setRange({maximumTemperature: response.data.maximumTemperature, maximumHumidity: response.data.maximumHumidity, minimumTemperature: response.data.minimumTemperature, minimumHumidity: response.data.minimumHumidity});\r\n    }).catch((error) => console.log('Failed to Fetch Climate Information', error));\r\n    useEffect(()=>fetchClimate(),[temperatureMode]);\r\n\r\n    const sendChanges = (password) => {setVerification(undefined); \r\n    // if(saveButtonText == 'Save Changes')\r\n        axios.post(`${SERVER_URL}/set-settings/`, {ADVANCED_PASSPHRASE: password,\r\n            tag: temperatureMode ? 'climate-temperature' : 'climate-humidity',\r\n            climate: JSON.stringify(CLIMATE),\r\n        }).then((response) => { setSaveButtonText('Saved'); console.log(response);\r\n            setTimeout(()=>{fetchClimate();}, 5000);\r\n        }).catch((error) => console.log('Failed to Fetch Climate Information', error));\r\n    // else setSaveButtonText('45');\r\n}\r\n\r\n//UI Utilities\r\n    const formatTemperature = (temp) => convertToFahrenheit ? (Math.round((temp*(9/5)+32)*10)/10) : temp;\r\n    const getMaxValue = (format=false, ghost=false, round = true) => {const value = (temperatureMode != ghost) ? format ? formatTemperature(range.maximumTemperature) : range.maximumTemperature  : range.maximumHumidity; return round ? Math.ceil(value) : value; }\r\n    const getMinValue = (format=false, ghost=false, round = true) => {const value = (temperatureMode != ghost) ? format ? formatTemperature(range.minimumTemperature) : range.minimumTemperature :  range.minimumHumidity; return round ? Math.floor(value) : value; }\r\n\r\n    const getWidthOffset = () => 5.0 * parseFloat(getComputedStyle(document.documentElement).fontSize); //rem unit = column 1 & margin/padding\r\n\r\n    const getRange = (format=false) => {let values = [];\r\n        const cellRatio = ((window.innerWidth-(getWidthOffset()))/((getMaxValue(format)-getMinValue(format))*(2.0*parseFloat(getComputedStyle(document.documentElement).fontSize))));\r\n        for(var i=(getMinValue(format)); i<(getMaxValue(format)); i += Math.ceil(1/cellRatio)) { values.push(i); }\r\n                values.push(getMaxValue(format)); return values; }\r\n\r\n    const calculatedWidth = (3.5 * getRange(true).length * (1.0*parseFloat(getComputedStyle(document.documentElement).fontSize)))+getWidthOffset(); //Designed to Allow twice space for getRange() list\r\n\r\n\r\n    return(<div id='climate-container'  >\r\n        <div id='climate-header-box'>\r\n            <button className='climate-header-button' style={{backgroundColor: temperatureMode ? 'rgba(0, 102, 0, 0.6)' : 'rgba(255, 255, 255, 0.4)', color: temperatureMode ? 'white' : 'black'}} onClick={()=>setTemperatureMode(true)}>Temperature</button>\r\n            <button className='climate-header-button' style={{backgroundColor: temperatureMode ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 102, 0, 0.6)',  color: temperatureMode ? 'black' : 'white'}} onClick={()=>setTemperatureMode(false)}>Humidity</button>\r\n            {saveButtonText != '' ? <button className='climate-header-button' style={{backgroundColor: (saveButtonText == 'Saved' || saveButtonText == 'Save Changes') ? '#cc5500' : (saveButtonText == 'Pending') ? 'orange' : '#e8000d',  color: 'black'}} onClick={()=>{setSaveButtonText('Pending'); setVerification('Enter Advanced Passphrase to Proceed:');}}>{saveButtonText}</button> : <section className='none no-size'></section>}\r\n        </div>\r\n        <div id='climate-slider-box' className='none ' style={{maxWidth: `${calculatedWidth}px`}}>\r\n                <div className='none climate-slider-value-box' style={{gridRow: 1, gridColumn: 1, paddingLeft: '4.0rem', paddingRight: '2.0rem', width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`,}}>\r\n                    {getRange(false).map((v,j) => <label key={`climate-slider-range-value-$first-${j}`} className='climate-slider-range-value' style={{gridColumn: (j+1), textAlign: j==0 ? 'left' : (j == (getRange(false).length-1)) ? 'right' : 'center'}}>{v}</label>)}\r\n                </div>\r\n            {CLIMATE.map( (item, i) => <div key={`slider-${i}`} className='none climate-slider-outer-box' style={{gridRow: (i+2)}} >              \r\n                <strong className='climate-hour-value' style={{}}>{item.hour}:00</strong>\r\n                <strong className='climate-hour-value' style={{gridRow: 2, color: 'var(--main-color)', fontSize: '0.8rem'}}>{temperatureMode ? parseFloat(item.temperature).toFixed(1) : parseFloat(item.humidity).toFixed(1)} {temperatureMode ? <span className='none' style={{fontSize: '0.65rem', verticalAlign: 'top'}}>&#8457;</span> : '%'}</strong>\r\n\r\n                <input readOnly className='none climate-slider-range-bar climate-slider-range-bar-ghost' style={{width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`, }} type='range' step='0.01' min={getMinValue(false, true, false)} max ={getMaxValue(false, true, false)} value={!temperatureMode ? CLIMATE[i].temperature : CLIMATE[i].humidity} />\r\n                <input readOnly className='none climate-slider-range-bar climate-slider-range-bar-ghost-dot' style={{width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`, }} type='range' step='0.01' min={getMinValue(false, false, false)} max ={getMaxValue(false, false, false)} value={temperatureMode ? CLIMATE[i].temperatureAverage : CLIMATE[i].humidityAverage} />\r\n                <input className='none climate-slider-range-bar' style={{width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`, }} type='range' step='0.01' min={getMinValue(false, false, false)} max ={getMaxValue(false, false, false)} value={temperatureMode ? CLIMATE[i].temperature : CLIMATE[i].humidity} onChange={(event)=>{temperatureMode ? CLIMATE[i].temperature=event.target.value : CLIMATE[i].humidity=event.target.value;  setCLIMATE([...CLIMATE]); setSaveButtonText('Save Changes');}} />\r\n                {/* <input className='none climate-slider-range-bar' style={{width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`, }}  type='range' step='0.01'  min={getMinValue(false)} max ={getMaxValue(false)} value={sample} onChange={(event)=>{console.log(event.target.value, formatTemperature(event.target.value)); setSample(event.target.value);}} /> */}\r\n\r\n                <div id={`data-${i}`} className='none climate-slider-value-box' style={{width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`, }}>\r\n                    {getRange((i % 2) == 0).map((v,j) => <label key={`climate-slider-range-value-${i}-${j}`} className='climate-slider-range-value' style={{gridColumn: (j+1), textAlign: j==0 ? 'left' : (j == (getRange((i % 2) == 0).length-1)) ? 'right' : 'center'}}>{v}</label>)}\r\n                </div>\r\n                </div>)}\r\n        </div>\r\n        {verification ?\r\n            <Verify\r\n                prompt={verification}\r\n                onSubmit={sendChanges}\r\n                onCancel={()=>{setVerification(undefined); setSaveButtonText(''); fetchClimate();}}\r\n            />  : <div className='none no-size' style={{position:'absolute'}}></div>}\r\n    </div>);\r\n}\r\nexport default Climate;","\r\nimport React, {useState, useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport { Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport '../index.css';\r\nimport './ErrorBar.css';\r\n\r\nconst ErrorBar = (props) => {\r\n    const DATA = useSelector(root => root.data);\r\n    const [ERROR_LIST, setERROR_LIST] = useState([]);\r\n    const routeHistory = useHistory();\r\n    const routeLocation = useLocation();\r\n\r\n    useEffect(()=>{ const list = [];\r\n        if(DATA.sensorErrorCode == undefined) list.push('SERVER DISCONNECTED');\r\n        if(DATA.sensorErrorCode) list.push('SENSOR ERROR');\r\n        if(DATA.maximumTemperatureErrorCode) list.push('MAXIMUM TEMPERATURE');\r\n        if(DATA.minimumTemperatureErrorCode) list.push('MINIMUM TEMPERATURE');\r\n        if(DATA.maximumHumidityErrorCode) list.push('MAXIMUM HUMIDITY');\r\n        if(DATA.minimumHumidityErrorCode) list.push('MINIMUM HUMIDITY');\r\n        if(DATA.accessDatabase != undefined && !DATA.accessDatabase) list.push('DATABASE DISCONNECTED');\r\n    setERROR_LIST(list); },[DATA]);\r\n\r\n    return(\r\n        <div id='error-bar-container'  style={{display: ERROR_LIST.length ? 'block': 'none'}} onClick={()=>{\r\n            if(routeLocation.pathname == '/settings') routeHistory.push('/log');\r\n                else routeHistory.push('/settings');\r\n        }}>\r\n            <div id='error-bar-wrap' >\r\n                {ERROR_LIST.map(e=><strong key={e} className='error-bar-text'>{e}</strong>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorBar;","import React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport Verify from '../Verify';\r\n\r\nimport '../index.css';\r\nimport './Settings.css';\r\n\r\nconst getButtonColor=(buttonText)=>(buttonText=='') ? 'transparent' : (buttonText=='UPDATE') ? 'var(--main-color)' : (buttonText=='PASS' || buttonText=='INVALID') ? '#e8000d' : (buttonText=='PENDING' || buttonText=='BLANK') ? 'orange' : '#cc5500';\r\n\r\nconst SettingsList = (props) => { \r\n    const [verification, setVerification] = useState(undefined);\r\n    const openList = useSelector(root => root.dropListOpen);\r\n    const dispatch = useDispatch();\r\n    const [current, setCurrent] = useState(props.current == undefined ? [] : Array.isArray(props.current) ? props.current : [props.current]);\r\n    const [options, setOptions] = useState(props.options == undefined ? current : Array.isArray(props.options) ? props.options : [props.options]);\r\n    const [list, setList] = useState(props.current == undefined ? [] : Array.isArray(props.current) ? props.current : [props.current]);\r\n    const [custom, setCustom] = useState('');\r\n    const [buttonText, setButtonText] = useState('');\r\n\r\n    useEffect(()=>{//Syncing Props b/c initial render redux.data == {} -> fetchData() //Not proper solution, but others didn't work :: https://tkdodo.eu/blog/putting-props-to-use-state\r\n        const newCurrent = props.current == undefined ? [] : Array.isArray(props.current) ? props.current : [props.current];\r\n        const newOptions = props.options == undefined ? newCurrent : Array.isArray(props.options) ? props.options : [props.options];\r\n        setCurrent(newCurrent);\r\n        setOptions(newOptions); \r\n        setList(newCurrent);\r\n    },[props]);\r\n\r\n    //Guidelines Abstracted\r\n    const verifyLevel = (props.verifyLevel != undefined) ? props.verifyLevel : 2;\r\n    const selectMultiple = (props.selectMultiple != undefined) ? props.selectMultiple : (Array.isArray(props.current));\r\n    const inputType = (props.inputType != undefined) ? props.inputType : (isNaN(props.current) ? 'text' : 'number' );\r\n    const addCustom = (props.addCustom != undefined) ? props.addCustom : false;\r\n    const condense = (props.condense != undefined) ? props.condense : false;\r\n\r\n    const isChanged=(latestList)=>{\r\n        const l = latestList || list;\r\n        if(Array.isArray(l))\r\n            for(var i=0; i<l.length; i++) {\r\n                    if(!current.includes(l[i])) return true;\r\n            } \r\n        if(Array.isArray(current))\r\n            for(var y=0; y<current.length; y++) {\r\n                if(!l.includes(current[y])) return true;\r\n        }return false;\r\n    }\r\n\r\n    const updateButton = async(latestList) => { const l = latestList || list;\r\n        let text = isChanged(l) ? 'UPDATE' : ''; \r\n        if(Array.isArray(l)){\r\n        l.forEach(v=>{if(!options.includes(v)) text='INVALID';});\r\n        if(!selectMultiple && l.length > 1) text='INVALID';\r\n        if(l.length == 0) text='BLANK';\r\n        for(var i=0; i<l.length; i++) {\r\n            if(l[i] == undefined) text='BLANK';\r\n        } \r\n    } setButtonText(text);\r\n        return text; }\r\n    useEffect(()=>updateButton(), [list]);\r\n\r\n    //*********************************\r\n    //   API REQUEST & VERIFICATION\r\n    //*********************************\r\n    const makeRequest=async(password, latestList)=>{ setVerification(undefined); //saving local until fetch up stream is called to replace data\r\n        if(verifyLevel == 1 && !localStorage.getItem(\"password\")) await localStorage.setItem(\"password\", password.toString());\r\n\r\n        const success = await props.onUpdate(selectMultiple ? JSON.stringify(latestList || list) : list[0], password);\r\n        if(success == true || isNaN(success)) { setButtonText((success != true) ? success : 'SAVED'); setCurrent(list); setTimeout(()=>setButtonText(''), 5000); }\r\n        else if(success == 401) { setButtonText('PASS'); setTimeout(()=>setList(current), 5000); localStorage.clear();}\r\n        else if(success == 404) { setButtonText('INVALID'); setTimeout(()=>setList(current), 5000); localStorage.clear();}\r\n        else {setButtonText('FAILED'); setTimeout(()=>setList(current), 5000); }\r\n    }\r\n\r\n    const processUpdate=async(latestList)=>{ if(await updateButton(latestList) == 'UPDATE') { setButtonText('PENDING'); dispatch({type: 'setDropList'});\r\n        if(verifyLevel == 0) makeRequest(undefined, latestList); //No Security\r\n        else if(verifyLevel == 1 && !localStorage.getItem(\"password\")) setVerification('Enter Control Password to Continue:'); //Only Request if not stored\r\n        else if(verifyLevel == 1) makeRequest(localStorage.getItem(\"password\"), latestList); //Use Saved Password\r\n        else setVerification('Enter Advanced Passphrase to Proceed:'); //undefined || >1\r\n    }}\r\n\r\n    const toggleOption=async(option)=>{ let latest = [...list]; let allowed = [...options];\r\n    //Special Email Verification\r\n        if(props.inputType == 'email' && !(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(option)) {setButtonText('Email'); return 'Email';}\r\n    //Add Custom to Options\r\n        if(addCustom && !allowed.includes(option)) allowed = [...options, option];\r\n        //Add to Select List\r\n            if(!selectMultiple && (addCustom || allowed.includes(option))) latest=[option]; //Single set as list\r\n            else if(list.includes(option)) latest= [...list.filter((o) => (o != option && allowed.includes(o)))]; //remove list\r\n            else latest =  [...list.filter((o) => allowed.includes(o)), option]; //add list\r\n\r\n            setOptions([...allowed]); setList([...latest]);\r\n            if(!selectMultiple) processUpdate(latest);\r\n        return await updateButton(latest);\r\n    }\r\n    \r\n    //*********************************\r\n    //   HTML DISPLAY\r\n    //*********************************\r\n    const getOldOptions = () => [...list.filter(c=>!options.includes(c))]; //old/changed control names\r\n\r\n    return(<div id={props.title} className='settings-value-box'  style={{ gridTemplateColumns: (condense) ? 'auto 40%' : null}} onFocus={()=>{}} onBlur={()=>{}} >\r\n        {(props.title==undefined) ?  <div className='none no-size' style={{position:'absolute'}}></div> : <strong className='settings-value-title' >{props.title}</strong>}\r\n            {(openList == props.dropListId) ? <div ><button className='settings-value-input ' onClick={()=>dispatch({type: 'setDropList', payload: props.dropListId})} >{list ? list.toString() : ''}</button>\r\n                        <div className='drop-menu-list' style={{top: options.length <= 5 ? null : '5vh', position: options.length <= 5 ? 'absolute' : 'fixed'}}>\r\n                            <button key='settings-close-button' className='drop-menu-item' style={{border: 'none', borderRadius: 0, borderBottom: '1px solid whitesmoke', backgroundColor: 'whitesmoke', color: 'black'}} onClick={()=>{\r\n                                        dispatch({type: 'setDropList'});\r\n                                    }}>Close</button>\r\n                        {getOldOptions().map((option, i) => \r\n                            <label key={option+i+'old'} className='drop-menu-item' style={{gridRow: (i+2), color: 'gold'}} onClick={()=>{ \r\n                                setList(old => [...old.filter((o) => (o != option && options.includes(o)))])\r\n                                if(!selectMultiple) dispatch({type: 'setDropList'});\r\n                                if(!selectMultiple) processUpdate();\r\n                            }}>{option.toString()}</label>\r\n                        )}\r\n                        {options.map((option, i) => \r\n                            <label key={option+i} className='drop-menu-item' style={{gridRow: (i+2+getOldOptions().length), border: list.includes(option) ? '1px solid var(--main-color)' : 'none', color: list.includes(option) ? 'var(--main-color)' : 'white'}} onClick={async()=>{\r\n                                await toggleOption(option);\r\n                                if(!selectMultiple) dispatch({type: 'setDropList'});\r\n                                if(!selectMultiple) processUpdate();\r\n                            }}>{option.toString()}</label>\r\n                        )}\r\n                         {addCustom ? <div className='none' style={{display:'inline-grid', gridRow: (getOldOptions().length + options.length+3), gridColumn: 1}}>\r\n                                <input key='settings-add-input' type={inputType} className='drop-menu-item' style={{gridRow: (1), gridColumn: 1, width: '10.0rem', borderRadius: 0, border: '1px solid whitesmoke', backgroundColor: 'black', color: 'white'}} \r\n                                    value={custom}\r\n                                    onChange={(c)=>setCustom(c.target.value)}\r\n                                    onKeyPress={async(e)=>{ if (e.charCode == 13) {\r\n                                        if(await toggleOption(custom) == 'UPDATE') setCustom('');\r\n                                        if(!selectMultiple) dispatch({type: 'setDropList'});\r\n                                        if(!selectMultiple) processUpdate();\r\n                                    }}}/>\r\n                                <button key='settings-add-button' className='drop-menu-item' style={{gridRow: (1), gridColumn: 2, border: 'none', borderRadius: 0, borderBottom: '1px solid whitesmoke', backgroundColor: 'whitesmoke', color: 'black'}} onClick={async()=>{\r\n                                        if(await toggleOption(custom) == 'UPDATE') setCustom('');\r\n                                        if(!selectMultiple) dispatch({type: 'setDropList'});\r\n                                    }}>ADD</button>\r\n                        </div> : <div className='none no-size'></div>}\r\n                        {(condense || buttonText == 'UPDATE') ? <button key='settings-save-button' className='drop-menu-item' style={{border: 'none', borderRadius: 0, border: 'none', backgroundColor: getButtonColor(buttonText), color: 'white'}} onClick={()=>{\r\n                                        processUpdate();\r\n                                    }}>{buttonText}</button> : <div className='none no-size'></div>}\r\n                </div></div> \r\n            : <button className='settings-value-input ' onClick={()=>dispatch({type: 'setDropList', payload: props.dropListId})} >{list ? list.toString() : ''}</button>}\r\n        {(condense && !selectMultiple) ?  <div className='none no-size' style={{position:'absolute'}}></div> : <button className='settings-value-button' onClick={processUpdate}  style={{backgroundColor: getButtonColor(buttonText)}}>{buttonText}</button> }\r\n        {verification ?\r\n            <Verify\r\n                prompt={verification}\r\n                onSubmit={makeRequest}\r\n                onCancel={()=>{setVerification(undefined); setButtonText('UPDATE'); if(condense) setList([...current]); }}\r\n            />  : <div className='none no-size' style={{position:'absolute'}}></div>}\r\n    </div>);\r\n}\r\n\r\nexport default SettingsList;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Verify from '../Verify';\r\n\r\nimport '../index.css';\r\nimport './Settings.css';\r\n\r\nconst getButtonColor=(buttonText)=>(buttonText=='') ? 'transparent' : (buttonText=='UPDATE') ? 'var(--main-color)' : (buttonText=='PASS' || buttonText=='INVALID' || buttonText=='FAILED') ? '#e8000d' : (buttonText=='PENDING' || buttonText=='BLANK') ? 'orange' : '#cc5500';\r\n\r\nconst SettingsBlank = (props) => {\r\n    const [verification, setVerification] = useState(undefined);\r\n    const [current, setCurrent] = useState(props.current);\r\n    const [value, setValue] = useState(current);\r\n    const [buttonText, setButtonText] = useState('');\r\n\r\n    //Guidelines Abstracted\r\n        const verifyLevel = (props.verifyLevel != undefined) ? props.verifyLevel : 2;\r\n        const inputType = (props.inputType != undefined && props.condense == undefined) ? props.inputType : (isNaN(props.current) ? 'text' : 'number' );\r\n        const numberStep = (props.numberStep != undefined) ? props.numberStep : 1;\r\n        const condense = (props.condense != undefined) ? props.condense : false;\r\n\r\n        const updateButton = async()=>{const text = (value == current && props.current == undefined) ? 'BLANK' : (inputType == 'number' && isNaN(value)) ? 'NUMBER' : (value != current) ? 'UPDATE' : '';\r\n                                        setButtonText(text); return text;}\r\n        useEffect(()=>updateButton(), [value]);\r\n\r\n    //*********************************\r\n    //   API REQUEST & VERIFICATION\r\n    //*********************************\r\n    const makeRequest=async(password)=>{ setVerification(undefined); //saving local until fetch up stream is called to replace data\r\n        if(verifyLevel == 1 && !localStorage.getItem(\"password\")) await localStorage.setItem(\"password\", password.toString());\r\n        const success = await props.onUpdate(value, password);\r\n        if(success == true || isNaN(success)) {setButtonText((success != true) ? success : 'SAVED'); setCurrent(inputType == 'textarea' ? '' : value); if(inputType == 'textarea') setValue(''); setTimeout(()=>setButtonText(''), 5000); }\r\n        else if(success == 401) { if(!props.cache) setButtonText('PASS'); setTimeout(()=>setValue(current), 5000);  localStorage.clear();}\r\n        else if(success == 404) { if(!props.cache) setButtonText('INVALID');setTimeout(()=>setValue(current), 5000); }\r\n        else {setButtonText('FAILED'); if(!props.cache) setTimeout(()=>setValue(current), 5000); }\r\n\r\n    }\r\n\r\n    const processUpdate=async()=>{ if(await updateButton() == 'UPDATE') { setButtonText('PENDING');\r\n        if(verifyLevel == 0) makeRequest(undefined); //No Security\r\n        else if(verifyLevel == 1 && !localStorage.getItem(\"password\")) setVerification('Enter Control Password to Continue:'); //Only Request if not stored\r\n        else if(verifyLevel == 1) makeRequest(localStorage.getItem(\"password\")); //Use Saved Password\r\n        else setVerification('Enter Advanced Passphrase to Proceed:'); //undefined || >1\r\n    }}\r\n\r\n    //*********************************\r\n    //   HTML DISPLAY\r\n    //*********************************\r\n\r\n    return(<div className='settings-value-box' style={{gridTemplateColumns: (condense) ? '1fr 1fr' : null}}>\r\n        {(props.title==undefined) ?  <div className='none no-size' style={{position:'absolute'}}></div> : <strong className='settings-value-title' >{props.title}</strong>}\r\n        {inputType == 'textarea' ? <textarea name=\"textarea\" value={value} onChange={(v)=>setValue(v.target.value)} />\r\n        : <input className='settings-value-input' style={{color: (condense && buttonText != '') ? getButtonColor(buttonText) : null}} type={inputType} step={inputType == 'number' ? numberStep : null} value={value} onChange={(v)=>setValue(v.target.value)} onKeyPress={(e)=>{if(e.charCode == 13) {processUpdate();}}}/>}\r\n        {condense ?  <div className='none no-size' style={{position:'absolute'}}></div> : <button className='settings-value-button' onClick={processUpdate}  style={{backgroundColor:  getButtonColor(buttonText)}}>{(inputType == 'textarea' && value != '') ? 'SAVE' : buttonText}</button>}\r\n        {verification ?\r\n            <Verify\r\n                prompt={verification}\r\n                onSubmit={makeRequest}\r\n                onCancel={()=>{setVerification(undefined); setButtonText('UPDATE');}}\r\n            />  : <div className='none no-size' style={{position:'absolute'}}></div>}\r\n    </div>);\r\n}\r\nexport default SettingsBlank;\r\n","import React from 'react';\r\nimport { useHistory} from \"react-router-dom\";\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\nimport SettingsList from './SettingsList';\r\nimport SettingsBlank from './SettingsBlank';\r\nimport SettingsButton from './SettingsButton';\r\nimport {fetchData} from '../index';\r\nimport useInterval from '../useInterval';\r\n\r\nimport '../index.css';\r\nimport './Settings.css';\r\n\r\n/*SETTINGS Props Key : 9-26-2021\r\nSettingsList.jsx\r\n    + dropListId\r\n    + title\r\n    + current\r\n    + options\r\n    + onUpdate\r\n    ? verifyLevel = 2\r\n    ? selectMultiple = current type\r\n    ? addCustom = false\r\nSettingsBlank.jsx\r\n    + title\r\n    + current\r\n    + onUpdate\r\n    ? verifyLevel = 2\r\n    ? inputType = current type: text/number\r\n    ? numberStep = 1\r\n    ? cache: true/false //Won't clear Input on Failed Request\r\nSettingsButton.jsx\r\n    + title\r\n    + onUpdate\r\n    ? verifyLevel = 1\r\n*/\r\n\r\nconst Settings = (props) => {\r\n// console.log(props);\r\nconst SERVER_URL = useSelector(root => root.serverURL);\r\nconst DATA = useSelector(root => root.data);\r\nconst SCREENSAVER_BRIGHTNESS = useSelector(root => root.screenSaverBrightness);\r\nconst convertToFahrenheit = useSelector(root => root.convertToFahrenheit);\r\nconst dispatch = useDispatch();\r\nconst routeHistory = useHistory();\r\n\r\n    const post = async(route, body, onSuccess) => axios.post(`${SERVER_URL}${route}/`, body).then((response)=>onSuccess == 'response' ? response : onSuccess || true).catch((error)=>error.response ? error.response.status : false);\r\n    const put = async(route, body, onSuccess) => axios.put(`${SERVER_URL}${route}/`, body).then((response)=>onSuccess == 'response' ? response : onSuccess || true).catch((error)=>error.response ? error.response.status : false);\r\n\r\n    const LOCAL_SETTINGS = [\r\n        <SettingsList title='Temperature:'\r\n            dropListId='temperature-conversion'\r\n            current={convertToFahrenheit ? 'Fahrenheit' : 'Celsius'}\r\n            options={['Celsius', 'Fahrenheit']}\r\n            verifyLevel={0}\r\n            onUpdate={(value, password)=>{dispatch({type: 'toggleConvertToFahrenheit', payload: (value == 'Fahrenheit')}); return true;}}/>, \r\n        <SettingsButton title='Deactivate Screen Saver' pendingText='Deactivating'\r\n            onUpdate={async()=>{props.deactivateScreenSaver(300000); return '5 Minutes';}} />,\r\n        <SettingsList title='ScreenSaver Brightness:'\r\n            dropListId='screensaver-brightness'\r\n            current={SCREENSAVER_BRIGHTNESS.setting}\r\n            options={SCREENSAVER_BRIGHTNESS.settingOptions}\r\n            verifyLevel={0}\r\n            onUpdate={(value, password)=>{\r\n                if(SCREENSAVER_BRIGHTNESS.settingOptions.includes(value)) {dispatch({type: 'setting', payload: value}); return true;}\r\n                else return false;}}/>, \r\n        <div style={{borderBottom: '1px solid var(--main-color)', margin: '0.5rem 0', width: '100%'}}></div>,\r\n        <SettingsBlank title='Server URL:'\r\n                current={SERVER_URL}\r\n                verifyLevel={0}\r\n                cache={true}\r\n                onUpdate={async(value, password)=>{dispatch({type: 'setServerURL', payload: value}); const response = await fetchData(); if(response == true) routeHistory.push('/'); return (response == true) ? 'UPDATING' : response;}}/>,\r\n        <SettingsButton title='Update Data' pendingText='RETRIEVING'\r\n        onUpdate={async()=>{const response = await fetchData(); return (response == true) ? 'UPDATED' : response;}} />\r\n    ];\r\n    if(SCREENSAVER_BRIGHTNESS.setting == 'Scheduled') \r\n        LOCAL_SETTINGS.splice(2,0,\r\n            <SettingsBlank title='ScreenSaver Day Hour Start: (0-23/24)'\r\n                current={SCREENSAVER_BRIGHTNESS.dayHourStart}\r\n                verifyLevel={0}\r\n                onUpdate={(value, password)=>{const hour = parseInt(value);\r\n                    if(hour >=0 && hour <= 24) {dispatch({type: 'dayHourStart', payload: hour}); return true;} //24 is disabled\r\n                    else return false;}}/>,\r\n            <SettingsBlank title='ScreenSaver Day Opacity: (%)'\r\n                current={SCREENSAVER_BRIGHTNESS.dayOpacity*100}\r\n                verifyLevel={0}\r\n                onUpdate={(value, password)=>{const opacity = (parseInt(value)/100);\r\n                    if(opacity >=0 && opacity <= 1) {dispatch({type: 'dayOpacity', payload: opacity}); return true;}\r\n                    else return false;}}/>,  \r\n            <SettingsBlank title='ScreenSaver Night Hour Start: (0-23/24)'\r\n                current={SCREENSAVER_BRIGHTNESS.nightHourStart}\r\n                verifyLevel={0}\r\n                onUpdate={(value, password)=>{const hour = parseInt(value);\r\n                    if(hour >=0 && hour <= 24) {dispatch({type: 'nightHourStart', payload: hour}); return true;}\r\n                    else return false;}}/>,\r\n            <SettingsBlank title='ScreenSaver Night Opacity: (%)'\r\n                current={SCREENSAVER_BRIGHTNESS.nightOpacity*100}\r\n                verifyLevel={0}\r\n                onUpdate={(value, password)=>{const opacity = (parseInt(value)/100);\r\n                    if(opacity >=0 && opacity <= 1) {dispatch({type: 'nightOpacity', payload: opacity}); return true;}\r\n                    else return false;}}/>,  \r\n            <SettingsBlank title='ScreenSaver Black Hour Start: (0-23/24)'\r\n                current={SCREENSAVER_BRIGHTNESS.blackHourStart}\r\n                verifyLevel={0}\r\n                onUpdate={(value, password)=>{const hour = parseInt(value);\r\n                    if(hour >=0 && hour <= 24) {dispatch({type: 'blackHourStart', payload: hour}); return true;}\r\n                    else return false;}}/>            \r\n            );\r\n    \r\n    return((DATA == {} || DATA.CONTROLS == undefined) ? <div id='settings-container'>{LOCAL_SETTINGS}</div>\r\n    : <div id='settings-container'>\r\n        {LOCAL_SETTINGS}\r\n        <SettingsButton title='Evaluate Conditions' pendingText='EXECUTING'\r\n            onUpdate={async(password)=>{setTimeout(()=>fetchData(), 60000); return await put('/evaluate', {PASSWORD: password}, 'COMPLETE');}} />  \r\n        <SettingsBlank title='Postpone Next Evaluation: (ms)'\r\n            current={0}\r\n            numberStep={60000}\r\n            verifyLevel={1}\r\n            onUpdate={(value, password)=>post('/postpone-evaluation', {PASSWORD: password,\r\n                duration: value,\r\n            })}/>  \r\n        <SettingsList title='Status Email Recipients:'\r\n            dropListId='status-email'\r\n            current={DATA.emailStatusRecipients}\r\n            verifyLevel={1}\r\n            addCustom={true}\r\n            inputType='email'\r\n            onUpdate={(value, password)=>post('/set-settings', {PASSWORD: password,\r\n                tag: 'emailStatusRecipients',\r\n                emailStatusRecipients: value,\r\n            })}/> \r\n        <SettingsButton title='Send Update Email' pendingText='SENDING'\r\n            onUpdate={(password)=>put('/send-update-email', {PASSWORD: password}, 'SENT')}/>\r\n        <SettingsList title='Issue Email Recipients:'\r\n            dropListId='issue-email'\r\n            current={DATA.emailIssueRecipients}\r\n            addCustom={true}\r\n            inputType='email'\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'emailIssueRecipients',\r\n                emailIssueRecipients: value,\r\n            })}/> \r\n        <SettingsBlank title='Email Report:'\r\n            current={''}\r\n            inputType='textarea'\r\n            verifyLevel={1}\r\n            onUpdate={(value, password)=>post('/save-log', {PASSWORD: password, email: true,\r\n                message: value,\r\n            })}/> \r\n        <SettingsList title='Email Update Regularity:'\r\n            dropListId='email-update-regularity'\r\n            current={DATA.updateRegularity}\r\n            options={DATA.updateRegularityOptions}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'updateRegularity',\r\n                updateRegularity: value,\r\n            })}/> \r\n        <SettingsList title='Allow Database Access:'\r\n            dropListId='allow-database'\r\n            current={DATA.accessDatabase}\r\n            options={[true, false]}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'accessDatabase',\r\n                accessDatabase: value,\r\n            })}/>  \r\n        <SettingsBlank title='Evaluation Frequency: (m)'\r\n            current={DATA.evaluationFrequency/(60000)}\r\n            numberStep={1}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'evaluationFrequency',\r\n                evaluationFrequency: (value*60000),\r\n            })}/> \r\n        <SettingsBlank title='Maximum Temperature: (c)'\r\n            current={DATA.maximumTemperature}\r\n            numberStep={0.5}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'maximumTemperature',\r\n                maximumTemperature: value,\r\n            })}/> \r\n        <SettingsBlank title='Minimum Temperature: (c)'\r\n            current={DATA.minimumTemperature}\r\n            numberStep={0.5}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'minimumTemperature',\r\n                minimumTemperature: value,\r\n            })}/> \r\n        <SettingsBlank title='Maximum Humidity: (%)'\r\n            current={DATA.maximumHumidity}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'maximumHumidity',\r\n                maximumHumidity: value,\r\n            })}/> \r\n        <SettingsBlank title='Minimum Humidity: (%)'\r\n            current={DATA.minimumHumidity}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'minimumHumidity',\r\n                minimumHumidity: value,\r\n            })}/> \r\n        <SettingsBlank title='Hour Day Starts: (h)'\r\n            current={DATA.dayHourStart}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'dayHourStart',\r\n                dayHourStart: value,\r\n            })}/> \r\n        <SettingsBlank title='Hour Night Starts: (h)'\r\n            current={DATA.nightHourStart}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'nightHourStart',\r\n                nightHourStart: value,\r\n            })}/> \r\n        <SettingsList title='Sensor Type:'\r\n            dropListId='sensor-type'\r\n            current={DATA.sensorType}\r\n            options={DATA.sensorTypes}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'sensorType',\r\n                sensorType: value,\r\n            })}/>  \r\n        <SettingsList title='Sensor Mode:'\r\n            dropListId='sensor-mode'\r\n            current={DATA.sensorMode}\r\n            options={DATA.sensorModes}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'sensorMode',\r\n                sensorMode: value,\r\n            })}/>\r\n        <SettingsButton title='Test Sensor' pendingText='Redirecting'\r\n            verifyLevel={0}\r\n            onUpdate={(password)=>routeHistory.push('/sensor-testing')} />\r\n        {DATA.CONTROLS.map((c,i)=><div key={`${c.id}-${i}`} ><SettingsBlank key={`name-${c.id}`} title={`[${c.id}] Control Name:`}\r\n                current={c.name}\r\n                onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                    tag: 'controls-name',\r\n                    id: c.id,\r\n                    name: value,\r\n                })}/> \r\n            <SettingsList key={`types-${c.id}`} title={`[${c.id}] Control Types:`}\r\n                dropListId={`control-types-${c}-${i}`}\r\n                current={c.types}\r\n                options={DATA.controlTypes}\r\n                selectMultiple={true}\r\n                addCustom={true}\r\n                onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                    tag: 'controls-types',\r\n                    id: c.id,\r\n                    types: value,\r\n                })}/></div>)}\r\n\r\n        <SettingsButton title='Reset Settings' pendingText='CONFIGURING'\r\n            verifyLevel={3}\r\n            onUpdate={async(password)=>{const result = await post('/reset-settings', {ADVANCED_PASSPHRASE: password}, 'RESETTING'); fetchData(); return result;}} />\r\n        <SettingsButton title='Reset File System' pendingText='CONFIGURING'\r\n            verifyLevel={3}\r\n            onUpdate={async(password)=>{const result = await post('/reset-file-system', {ADVANCED_PASSPHRASE: password}, 'RESETTING'); fetchData(); return result;}} />\r\n        <SettingsButton title='Terminate Server' pendingText='CONFIGURING'\r\n            verifyLevel={3}\r\n            onUpdate={(password)=>post('/terminate', {ADVANCED_PASSPHRASE: password}, 'TERMINATING')} />\r\n        <SettingsButton title='Restart PI' pendingText='CONFIGURING'\r\n            verifyLevel={3}\r\n            onUpdate={(password)=>post('/restart-pi', {ADVANCED_PASSPHRASE: password}, 'RESTARTING')} />\r\n        <SettingsList dropListId={`Error_Lights_Override`}\r\n                title='Error Lights:'\r\n                current={'Select Mode'}\r\n                options={['on', 'off', 'flash', 'bounce', 'max', 'min', 'humid', 'lock', 'unlock', 'reset']}\r\n                selectMultiple={false}\r\n                addCustom={true}\r\n                verifyLevel={1}\r\n                onUpdate={(value, password)=>post('/execute-error-lights', {PASSWORD: password,\r\n                    tag: 'error-lights',\r\n                    mode: new Array(value).pop(),\r\n                })}/>\r\n        <SettingsButton title='Server Log' pendingText='Redirecting'\r\n            verifyLevel={0}\r\n            onUpdate={(password)=>routeHistory.push('/log')} />\r\n        <SettingsBlank title='Save to Log:'\r\n            current={''}\r\n            inputType='textarea'\r\n            verifyLevel={1}\r\n            onUpdate={(value, password)=>post('/save-log', {PASSWORD: password,\r\n                message: value,\r\n            })}/> \r\n        <SettingsButton title='Log Out' pendingText='CLEARING'\r\n            verifyLevel={0}\r\n            onUpdate={()=>{localStorage.clear(); return 'CLEARED PASSWORD'}} />\r\n\r\n    </div>);\r\n}\r\nexport default Settings;","import React, {useEffect, useState} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport SettingsList from '../SettingsList';\r\nimport SettingsBlank from '../SettingsBlank';\r\nimport SettingsButton from '../SettingsButton';\r\n\r\n\r\nimport '../../index.css';\r\nimport '../Settings.css';\r\n\r\n\r\nconst SensorTest = (props) => {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const DATA = useSelector(root => root.data);\r\n    const [current, setCurrent] = useState('');\r\n    const [testingDuration, setTestingDuration] = useState(60000);\r\n    const [testingInterval, setTestingInterval] = useState(5000);\r\n    const [fetchingError, setFetchingError] = useState('');\r\n\r\n    let interval = null;\r\n    let timer = null;\r\n    const startTesting = () => { clearInterval(interval); clearTimeout(timer); setFetchingError('');\r\n        interval = setInterval(async()=>await axios.get(`${SERVER_URL}/sensor-test/`)\r\n                .then((response)=>{setCurrent(response.data); setFetchingError('');})\r\n                .catch((error)=>{console.log('Failed to Get Sensor Testing Data', error); setFetchingError(error);}), 500);\r\n        timer = setTimeout(()=>{clearInterval(interval); setFetchingError('');}, testingDuration+30000);\r\n        }\r\n    \r\n    return(<div id='sensor-test-container' >\r\n    <div className='sensor-test-first-header' >\r\n        {/* <section style={{gridColumn: 1, gridRow:1, width: '100%'}}> */}\r\n        <SettingsList title='Sensor Type:' \r\n            dropListId='sensor-testing-sensor-type'\r\n            current={DATA.sensorType}\r\n            options={DATA.sensorTypes}\r\n            condense={true}\r\n            onUpdate={async(value, password)=>await axios.get(`${SERVER_URL}/settings/`, {ADVANCED_PASSPHRASE: password,\r\n                tag: 'sensorType',\r\n                sensorType: value,\r\n            }).then((response)=>true)\r\n            .catch((error)=>error.response ? error.response.status : false)}/> \r\n        {/* </section><section style={{gridColumn: 3, gridRow:1, width: '100%'}}> */}\r\n        <SettingsBlank title='Test Duration: (m)'\r\n            current={testingDuration/60000}\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={(value, password)=>{const minutes = parseInt(value); if(!isNaN(minutes) && value == minutes && minutes > 0) {setTestingDuration(minutes*60000); return true;} else return false;}}/> \r\n        {/* </section><section style={{gridColumn: 4, gridRow:1, width: '100%'}}> */}\r\n        <SettingsBlank title='Test Interval: (s)'\r\n            current={testingInterval/1000}\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={(value, password)=>{const seconds = parseInt(value); if(!isNaN(seconds) && value == seconds && seconds > 0) {setTestingInterval(seconds*1000); return true;} else return false;}}/>\r\n            {/* </section> */}\r\n    </div><div className='sensor-test-second-header' >\r\n        <SettingsButton title={fetchingError == '' ? 'RESTART' : 'fetchingError'} pendingText='QUEUING'\r\n            buttonColor={fetchingError != '' ? 'darkred' : ''}\r\n            condense={true}\r\n            verifyLevel={2}\r\n            onUpdate={async(password)=>await axios.post(`${SERVER_URL}/sensor-test-restart/`, {ADVANCED_PASSPHRASE: password,\r\n                duration: testingDuration, interval: testingInterval,\r\n            }).then((response)=>{startTesting(); return 'INITIATING';})\r\n            .catch((error)=>error.response ? error.response.status : false)}\r\n            />\r\n        <SettingsButton title='UPDATE' pendingText='LOADING'\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={async(password)=>await axios.get(`${SERVER_URL}/sensor-test/`)\r\n                .then((response)=>{setCurrent(response.data); return 'CURRENT';})\r\n                .catch((error)=>error.response ? error.response.status : false)}\r\n            />\r\n    </div><div className='sensor-test-results'>\r\n        <table style={{margin: 0, width: '100%', border: 'none', borderSpacing: '4px'}}>\r\n            <tr>\r\n                <th style={{padding: '3px', textAlign: 'center'}} >Time</th>\r\n                <th style={{padding: '3px', textAlign: 'center'}} >Temperature</th>\r\n                <th style={{padding: '3px', textAlign: 'center'}} >Humidity</th>\r\n                <th style={{padding: '3px', textAlign: 'center'}} >Message</th>\r\n            </tr>\r\n            {current.split('\\n').map((p,i) => (p=='') ? <br key={`${p}-${current.length}`}/> : <tr key={`${p}-${current.length}`}> \r\n                {p.split('|').map((r, i) => <td key={`${r}-${p}-${current.length}`} style={{padding: '3px', textAlign: (i == 0) ? 'left' : 'center'}} colspan={((4 / p.split('|').length) > 1) ? Math.floor((4 / p.split('|').length)) : 1}>{r}</td>)}\r\n            </tr>)}\r\n\r\n        </table>\r\n    </div>\r\n    </div>);\r\n}\r\nexport default SensorTest;\r\n","import React, {useState,  useEffect, useRef} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport SettingsButton from '../SettingsButton';\r\n\r\n\r\nimport '../../index.css';\r\nimport '../Settings.css';\r\n\r\n\r\nconst LogView = (props) => {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const [current, setCurrent] = useState('');\r\n    const [fileName, setFileName] = useState('');\r\n    const topRef = useRef();\r\n    const location = useLocation();\r\n    const routeHistory = useHistory();\r\n\r\n    //USAGE: http://localhost:3000/log/5 => Loads the 5th log file ago\r\n    const getFileNumber = () => { console.log(SERVER_URL);\r\n        const result = /^\\/log\\/([0-9]+)*/.exec(location.pathname) || [0,0];\r\n        return result[1];\r\n    }\r\n\r\n    const updateLog = async (latest = false) => await axios.put(`${SERVER_URL}/log/`, latest ? {} : {fileName: fileName, fileNumber: `${getFileNumber()}`})\r\n        .then((response)=>{\r\n            setCurrent(response.data); \r\n            setFileName(response.headers['content-name']); \r\n            if(response.headers['content-name'] == 'log.txt') routeHistory.replace('/log');\r\n        return 'LOADING';})\r\n        .catch((error)=>error.response ? error.response.status : false);\r\n    useEffect(()=>updateLog(),[SERVER_URL]);\r\n\r\n    //Text Log Message Type Per Line\r\n    const isError = (line) => (/error|fail/i.test(line));\r\n    const isHeader = (line) => (/\\[\\d{1,2}-\\d{1,2}-\\d{4} \\d{1,2}:\\d{1,2}:\\d{1,2}]/.test(line));\r\n    const isClimate = (line) => (/severe|high|low/i.test(line));\r\n    const isTrace = (line) => (/^\\s*\\>{1}/.test(line));\r\n    const isSystem = (line) => (/restart|server/i.test(line));\r\n\r\n    \r\n    return(<div id='sensor-test-container' >\r\n        <SettingsButton title='UPDATE' pendingText='RETRIEVING'\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={async(password)=>await updateLog(true)}\r\n            />\r\n        <strong id='title' ref={topRef} className='settings-value-title' style={{marginTop: '1.5rem'}}>File: {fileName}</strong>\r\n    <div className='sensor-test-results'>\r\n    {current.split(/(?=\\[\\d{1,2}-\\d{1,2}-\\d{4} \\d{1,2}:\\d{1,2}:\\d{1,2}])/g).reverse()\r\n        .map(entry=>entry.split(/\\n/g)\r\n            .map((line, k) => !line.length ? <span key={k} className='no-size'></span>\r\n                : <p key={k} style={{\r\n                    color: (isHeader(line) && isError(line)) ? 'red' \r\n                        : isSystem(line) ? 'goldenrod' \r\n                        : isClimate(line) ? 'orangered' \r\n                        : isHeader(line) ? 'white'\r\n                        : isTrace(line) ? 'var(--main-color)'\r\n                        : '#848884',\r\n                    fontSize: isHeader(line) ? '14px'\r\n                        : isTrace(line) ? '12px'\r\n                        : '12px',\r\n                    fontWeight: isHeader(line) ? '500'\r\n                        : isTrace(line) ? '300'\r\n                        : '400',\r\n                    fontStyle: isTrace(line) ? 'italic' : 'normal',\r\n                    margin: isTrace(line) ? '0.1rem' : '0.2rem',\r\n                    marginLeft: isHeader(line) ? '0' \r\n                        : isTrace(line) ? '3.0rem' : '2.0rem',\r\n                    marginTop: isHeader(line) ? '1.0rem' \r\n                        : isTrace(line) ? '0.05rem' : '0.2rem'\r\n                    }}\r\n            >{line}</p>))}    </div>\r\n    {(fileName == undefined) ?  <div className='none no-size' style={{position:'absolute'}}></div> \r\n    : <SettingsButton title='PREVIOUS LOG' pendingText='SEARCHING'\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={async(password)=>await updateLog()\r\n                .then((response)=>{\r\n                    topRef.current.scrollIntoView({block: 'nearest', inline: 'start' });\r\n                    routeHistory.replace(`/log/${getFileNumber()+1}`);\r\n                    return 'LOADING';})\r\n                .catch((error)=>error.response ? error.response.status : false)}\r\n            />}\r\n    </div>);\r\n}\r\nexport default LogView;","import React, {useState, useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport dateFormat from 'dateformat';\r\nimport SettingsButton from '../Settings/SettingsButton';\r\n\r\n\r\nimport '../index.css';\r\nimport './History.css';\r\n\r\n\r\nconst History = (props) => {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const DATA = useSelector(root => root.data);\r\n    const convertToFahrenheit = useSelector(root => root.convertToFahrenheit);\r\n    const [dayList, setDayList] = useState([]);\r\n    const [climate, setClimate] = useState([]);\r\n\r\n    const formatTemperature = (temp) => convertToFahrenheit ? (Math.round(((temp*(9/5)+32)) * 100) / 100) : temp;\r\n\r\n    const getTemperatureOff = (current = DATA.operatingTemperature, goal = DATA.goalTemperature) => (Math.abs(current - goal) < 1) ? <span></span> : <span>[<small>{current > goal ? '+' : '-'}</small>{Math.floor(Math.abs(current - goal))}<span>&#176;</span>]</span>;\r\n\r\n    const getHumidityOff = (current = DATA.operatingHumidity, goal = DATA.goalHumidity) => (Math.abs(current - goal) < 1) ? <span></span> : <span>[<small>{current > goal ? '+' : '-'}</small>{Math.floor(Math.abs(current - goal))}<small>%</small>]</span>;\r\n\r\n    const getEfficiency = (value, time, temperature = true) => {if(climate == undefined) return '-';\r\n        const hour = new Date(time).getHours(); \r\n        let current = undefined;  for(var i=0; i<climate.length; i++) { if(hour == climate[i].hour) { current = climate[i]; break;}}\r\n      return !current ? 0 : Math.floor((value/(temperature ? current.temperature : current.humidity)) * 100);\r\n    }\r\n    \r\n    const getDuration = (ms) => `${Math.floor(ms/60000)}:${Math.abs(ms)%60000<10000?'0':''}${Math.floor((Math.abs(ms)%60000)/1000)}`;\r\n    \r\n    const updateHistory = async() => {\r\n        axios.get(`${SERVER_URL}/data-climate/`).then((response) => { setClimate(response.data.climate);  console.log('CLIMATE', response.data);\r\n                    }).catch((error) => console.log('Failed to Fetch Climate Information', error));\r\n        return await axios.get(`${SERVER_URL}/data-history/`)\r\n                    .then((response)=>{setDayList(response.data);  console.log('HISTORY', response.data); return 'LOADING'})\r\n                    .catch((error)=>error.response ? error.response.status : false);;\r\n    }\r\n    useEffect(()=>updateHistory(),[]);\r\n    \r\n    return(<div id='history-container' >\r\n        <SettingsButton title='UPDATE' pendingText='RETRIEVING'\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={()=>updateHistory()}\r\n            />\r\n        <table style={{margin: 0, width: '100%', border: '2px solid #013214', color: 'white', borderSpacing: '4px'}}>\r\n            <thead>\r\n                <tr>\r\n                    <th style={{padding: '3px', fontWeight: 700,  fontFamily: `'New Tegomin', serif`, textAlign: 'center',}} >Time</th>\r\n                    <th style={{padding: '3px', fontWeight: 700,  fontFamily: `'New Tegomin', serif`, textAlign: 'center',}} >Temperature</th>\r\n                    <th style={{padding: '3px', fontWeight: 700,  fontFamily: `'New Tegomin', serif`, textAlign: 'center',}} >Humidity</th>\r\n                    <th style={{padding: '3px', fontWeight: 700,  fontFamily: `'New Tegomin', serif`, textAlign: 'center',}} >Active</th>\r\n                    <th style={{padding: '3px', fontWeight: 700,  fontFamily: `'New Tegomin', serif`, textAlign: 'center',}} >Inactive</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {!(dayList && dayList.length) ? <tr><td style={{padding: '3px', textAlign: 'center' }} >No History Available</td></tr>\r\n                : dayList.map(r=><tr>\r\n                    <td style={{padding: '3px', border: '0.05rem solid #013214', textAlign: 'center' }} >{dateFormat(r.time, ((new Date().getTime() - r.time)<(6*24*60*60*1000)) ? 'DDDD, H:MM' : 'mmm-d H:MM')}</td>\r\n                    <td style={{padding: '3px', border: '0.05rem solid #013214', textAlign: 'center' }} >{formatTemperature(r.temperature)}{convertToFahrenheit ? <small>&#8457;</small> : <small>&#8451;</small>} {getTemperatureOff(formatTemperature(r.temperature), formatTemperature(r.goalTemperature))}</td>\r\n                    <td style={{padding: '3px', border: '0.05rem solid #013214', textAlign: 'center' }} >{r.humidity}% {getHumidityOff(r.humidity, r.goalHumidity)}</td>\r\n                    <td style={{padding: '3px', border: '0.05rem solid #013214', textAlign: 'center', fontSize: '0.7em' }} >{\r\n                        !r.active.length ? null : <table style={{margin: 0, width: '100%', borderSpacing: '2px' }}><tbody>\r\n                        {r.active.map(c=><tr>\r\n                                <td style={{textAlign: 'center' }} >{`${c.name}  [${c.settings[0].reason}]`}</td>\r\n                            </tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                    }</td>\r\n                    <td style={{padding: '3px', border: '0.05rem solid #013214', textAlign: 'center', fontSize: '0.7em' }} >{\r\n                        !r.active.length ? null : <table style={{margin: 0, width: '100%', borderSpacing: '2px' }}><tbody>\r\n                        {r.inactive.map(c=><tr>\r\n                                <td style={{textAlign: 'center' }} >{`${c.name}  [${c.settings[0].reason}]`}</td>\r\n                            </tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                    }</td>\r\n                </tr>)}             \r\n            </tbody> \r\n        </table>\r\n    </div>);\r\n}\r\nexport default History;","import React, {useRef, useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\nimport Readings from './Readings/Readings';\nimport Background from './Background/Background';\nimport ScreenSaver from './Background/ScreenSaver/ScreenSaver';\nimport Menu from './Menu/Menu';\nimport Control from './Control/Control';\nimport Schedule from './Control/Schedule/Schedule';\nimport Climate from './Climate/Climate';\nimport ErrorBar from './Readings/ErrorBar';\nimport Settings from './Settings/Settings';\nimport SensorTest from './Settings/Details/SensorTest';\nimport LogView from './Settings/Details/LogView';\n\n\nimport './App.css';\nimport History from './History/History';\n\n\n\nconst App = () => {\n\n  //ScreenSaver Detection\n  //https://stackoverflow.com/questions/37949981/call-child-method-from-parent\n  const screenSaverRef = useRef();\n  \n  const deactivateScreenSaver = () => { if(screenSaverRef.current) screenSaverRef.current.deactivateScreenSaver(); }\n  useEffect(() => window.addEventListener('scroll', deactivateScreenSaver, false), []); //https://stackoverflow.com/questions/5657292/why-is-false-used-after-this-simple-addeventlistener-function   \n\n  return (\n    <Router>\n      <div id=\"App\" className=' border-box' \n      onClick={()=>screenSaverRef.current.deactivateScreenSaver()}\n      onMouseMove={()=>screenSaverRef.current.deactivateScreenSaver()}\n      onWheel={()=>screenSaverRef.current.deactivateScreenSaver()}\n      >\n        <Background /> \n        {/* Screen saver toggle to not render and diable timer is reduct screenSaverBrightness.setting == 'Disabled' */}\n        <ScreenSaver ref={screenSaverRef}/>\n            \n        {/* <div id='page-box' className=' border-box' style={{ top: 0, padding: '1.0rem', height: `${menuRef.current ?  (window.innerHeight - (menuRef.current.offsetHeight) - 75) : window.innerHeight}px` }}>  */}\n        \n          <Switch>\n            <Route exact path=\"/\">\n            <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n              <Readings hideDetails={false}/>\n              <Menu />\n            </div>\n            </Route>\n            <Route path=\"/controls\">\n              <ErrorBar />\n              <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n                <Control/>\n                <Menu />\n              </div>\n            </Route>\n            <Route path=\"/schedules\">\n              <ErrorBar />\n              <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n                <Schedule/>\n                <Menu />\n              </div>\n            </Route>\n            <Route path=\"/climate\">\n              <ErrorBar />\n              <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n                <Climate/>\n                <Menu />\n              </div>\n            </Route>\n            <Route path=\"/history\">\n              <ErrorBar />\n              <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n                <History/>\n                <Menu />\n              </div>\n            </Route>\n            <Route path=\"/settings\">\n              <ErrorBar />\n              <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n                <Settings deactivateScreenSaver={(d)=>screenSaverRef.current.deactivateScreenSaver(d)}/>\n                <Menu />\n              </div>\n            </Route>\n            <Route path=\"/log\">\n              <ErrorBar />\n              <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n                <LogView/>\n                <Menu />\n              </div>\n            </Route>\n            <Route path=\"/sensor-testing\">\n              <ErrorBar />\n              <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n                <SensorTest/>\n                <Menu />\n              </div>\n            </Route>\n          </Switch>       \n        </div>\n    </Router>); //top layer last\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\nimport{Provider} from 'react-redux';\nimport {createStore, combineReducers} from 'redux';\n\nimport defaultImage from './Background/terrarium-buddies.jpg';\n\n\n\n//Action Creators (manipulate State) => Doing in Component | Traditional Method is to predefine here and import into component, just to send back to reducer\n\n//Single State with one Reducer | Could all be separate with separate reducers and combine with: 'combineReducers'\n\n//Reducers : Perform state Update\nconst setServerURLReducer = (state = process.env.REACT_APP_SERVER_URL || '', action) => {\n  if(action.type == 'setServerURL')  return action.payload;\n  else return state;\n}\n\nconst initialImage = {\n  IMAGE_INTERVAL: 6000,\n  TRANSITION_INTERVAL: 1000,\n  SCREENSAVER_INACTIVE_TIME: 60000,\n  location: defaultImage,\n  isVisible: false,  // https://stackoverflow.com/questions/40064249/react-animate-mount-and-unmount-of-a-single-component\n}\nconst setImageReducer = (state = initialImage, action) => {\n  if(action.type == 'setImage') { return {...state, location: action.payload, isVisible: true};}\n  else if(action.type == 'setImageVisible') return {...state, isVisible: true};\n  else if(action.type == 'setImageInvisible') return {...state, isVisible: false};\n  else return state;\n}\nconst screenSaverActiveReducer = (state = true, action) => { //Image Opacity on/off -> transition css\n  if(action.type == 'activateScreenSaver')  return true; \n  else if(action.type == 'deactivateScreenSaver')  return false;\n  else return state;\n}\nconst initialScreenSaverBrightness = {\n  settingOptions: ['Default', 'Scheduled', 'Black', 'Disabled'],\n  setting: 'Default',\n  dayOpacity: 1.00,\n  dayHourStart: 7,\n  nightOpacity: 0.35,\n  nightHourStart: 19,\n  blackHourStart: 21,\n}\nconst ScreenSaverBrightnessReducer = (state = initialScreenSaverBrightness, action) => {\n  switch(action.type) {\n    case 'setting':\n      if(state.settingOptions.includes(action.payload)) return {...state, setting: action.payload};\n      else return state;\n    case 'dayOpacity':\n      return {...state, setting: 'Scheduled', dayOpacity: action.payload};\n    case 'dayHourStart':\n      return {...state, setting: 'Scheduled', dayHourStart: action.payload};\n    case 'nightOpacity':\n      return {...state, setting: 'Scheduled', nightOpacity: action.payload};\n    case 'nightHourStart':\n      return {...state, setting: 'Scheduled', nightHourStart: action.payload};\n    case 'blackHourStart':\n      return {...state, setting: 'Scheduled', blackHourStart: action.payload};\n    default: return state;\n  }\n}\nconst setDataReducer = (state = {}, action) => {\n  if(action.type == 'setData') return {...action.payload};\n  else return state;\n}\n\nconst toggleConvertToFahrenheitReducer = (state = true, action) => { \n  if(action.type == 'toggleConvertToFahrenheit') return !state; \n  else return state;\n}\n\nconst setDropListReducer = (state = 'OFF', action) => { \n  if(action.type == 'setDropList' && state == action.payload) return 'OFF';\n  else if(action.type == 'setDropList' && action.payload == undefined) return 'OFF';  \n  else if(action.type == 'setDropList') return action.payload; \n  else return state;\n}\n\n//Setup Store\nconst allStateDomains = combineReducers({\n  serverURL: setServerURLReducer,\n  image: setImageReducer,\n  isScreenSaverActive: screenSaverActiveReducer, \n  screenSaverBrightness: ScreenSaverBrightnessReducer,\n  data: setDataReducer,\n  convertToFahrenheit: toggleConvertToFahrenheitReducer,\n  dropListOpen: setDropListReducer\n});\n\nconst store = createStore(allStateDomains,{});\n\n\n//Fetch Image\nsetInterval(()=>{//console.log('fetching Image', store.getState().image.image);\n  axios.get(`${store.getState().serverURL}/${(window.innerHeight > window.innerWidth) ? 'image-portrait' : 'image-landscape'}/`, { responseType: \"blob\" })\n  .then((response) => {\n    store.dispatch({type: 'setImageInvisible'});\n    setTimeout(() => {\n      store.dispatch({type: 'setImage', payload: URL.createObjectURL(response.data)});//also sets image viable // CSS transitions\n    \n    }, store.getState().image.TRANSITION_INTERVAL/2);\n  })\n  .catch((error) => {\n      console.error(error);\n      // setImage(defaultImage);\n    });\n}, store.getState().image.IMAGE_INTERVAL+store.getState().image.TRANSITION_INTERVAL || 5000);\n\n//Fetch Data\nexport const fetchData = async()=> { console.log(store.getState().serverURL);\n  return await axios.get(`${store.getState().serverURL}/data/`, { responseType: \"json\" })\n.then((res) => {const response = res.data;\n  store.dispatch({type: 'setData', payload: response});\n  localStorage.setItem(\"server\", store.getState().serverURL.toString());\n  console.log('fetching Data', response);\n  setTimeout(()=>fetchData(), response ? (((response.timeNextEvaluation) - new Date().getTime())+30000) : (60*1000));\n  return true;\n})\n.catch((error) => {\n    console.error(error);\n    store.dispatch({type: 'setData'});\n  setTimeout(()=>fetchData(), (60*1000));\n  return error.response ? error.response.status : false\n});}\n\nconst start = async() => {\n  store.dispatch({type: 'setServerURL', payload: window.location.origin});\n  if(await fetchData() !== true) { store.dispatch({type: 'setServerURL', payload: localStorage.getItem(\"server\")}); \n    if(await fetchData() !== true) store.dispatch({type: 'setServerURL', payload: window.location.origin}); \n  }}\nstart();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n          <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n"],"sourceRoot":""}